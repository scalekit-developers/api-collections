# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /api/v1/auth/passwordless:resend:
        post:
            tags:
                - AuthService
            operationId: AuthService_ResendPasswordless
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/auth/passwordless:verify:
        post:
            tags:
                - AuthService
            operationId: AuthService_VerifyPasswordLessOtp
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/OTPRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/auth:customizations:
        get:
            tags:
                - AuthService
            operationId: AuthService_GetAuthCustomizations
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetAuthCustomizationsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/auth:discovery:
        post:
            tags:
                - AuthService
            operationId: AuthService_DiscoveryAuthMethod
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DiscoveryRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DiscoveryAuthMethodResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/authmethods:
        get:
            tags:
                - AuthService
            operationId: AuthService_ListAuthMethods
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListAuthMethodsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/clients:
        get:
            tags:
                - ClientService
            operationId: ClientService_ListClient
            parameters:
                - name: include_plain_secret
                  in: query
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListClientsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/clients/{client_id}:
        get:
            tags:
                - ClientService
            operationId: ClientService_GetClient
            parameters:
                - name: client_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetClientResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - ClientService
            operationId: ClientService_UpdateClient
            parameters:
                - name: client_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: mask
                  in: query
                  schema:
                    type: string
                    format: field-mask
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateClient'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateClientResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/clients/{client_id}/secrets:
        post:
            tags:
                - ClientService
            operationId: ClientService_CreateClientSecret
            parameters:
                - name: client_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateClientSecretResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/clients/{client_id}/secrets/{secret_id}:
        put:
            tags:
                - ClientService
            operationId: ClientService_UpdateClientSecret
            parameters:
                - name: client_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: secret_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: mask
                  in: query
                  schema:
                    type: string
                    format: field-mask
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateClientSecret'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateClientSecretResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - ClientService
            operationId: ClientService_DeleteClientSecret
            parameters:
                - name: client_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: secret_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - ClientService
            operationId: ClientService_UpdateClientSecret
            parameters:
                - name: client_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: secret_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: mask
                  in: query
                  schema:
                    type: string
                    format: field-mask
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateClientSecret'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateClientSecretResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/connections:
        get:
            tags:
                - ConnectionService
            operationId: ConnectionService_ListConnections
            parameters:
                - name: organization_id
                  in: query
                  schema:
                    type: string
                - name: domain
                  in: query
                  schema:
                    type: string
                - name: include
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListConnectionsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - ConnectionService
            operationId: ConnectionService_CreateEnvironmentConnection
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateConnection'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateConnectionResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/connections/{connection_id}:
        get:
            tags:
                - ConnectionService
            operationId: ConnectionService_GetEnvironmentConnection
            parameters:
                - name: connection_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetConnectionResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - ConnectionService
            operationId: ConnectionService_DeleteEnvironmentConnection
            parameters:
                - name: connection_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - ConnectionService
            operationId: ConnectionService_UpdateEnvironmentConnection
            parameters:
                - name: connection_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateConnection'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateConnectionResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/connections/{connection_id}/test-requests/{test_request_id}:
        get:
            tags:
                - ConnectionService
            operationId: ConnectionService_GetConnectionTestResult
            parameters:
                - name: connection_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: test_request_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetConnectionTestResultResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/connections/{connection_id}:disable:
        patch:
            tags:
                - ConnectionService
            operationId: ConnectionService_DisableEnvironmentConnection
            parameters:
                - name: connection_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ToggleConnectionResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/connections/{connection_id}:enable:
        patch:
            tags:
                - ConnectionService
            operationId: ConnectionService_EnableEnvironmentConnection
            parameters:
                - name: connection_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ToggleConnectionResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/directory-user-attributes:
        get:
            tags:
                - UserAttributeService
            operationId: UserAttributeService_ListDirectoryUserAttributes
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUserAttributesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - UserAttributeService
            operationId: UserAttributeService_CreateDirectoryUserAttribute
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UserAttribute'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateUserAttributeResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/directory-user-attributes/{key}:
        delete:
            tags:
                - UserAttributeService
            operationId: UserAttributeService_DeleteDirectoryUserAttribute
            parameters:
                - name: key
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - UserAttributeService
            operationId: UserAttributeService_UpdateDirectoryUserAttribute
            parameters:
                - name: key
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UserAttribute'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateUserAttributeResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/domains/{origin}:
        get:
            tags:
                - DomainService
            operationId: DomainService_ListAuthorizedDomains
            parameters:
                - name: origin
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListAuthorizedDomainResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/email/servers:
        get:
            tags:
                - EmailService
            operationId: EmailService_ListEmailServers
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListEmailServerResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - EmailService
            description: Email Server Services
            operationId: EmailService_CreateEmailServer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateEmailServerRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateEmailServerResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/email/servers/{server_id}:
        get:
            tags:
                - EmailService
            operationId: EmailService_GetEmailServer
            parameters:
                - name: server_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetEmailServerResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - EmailService
            operationId: EmailService_UpdateEmailServerSettings
            parameters:
                - name: server_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SMTPServerSettings'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetEmailServerResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - EmailService
            operationId: EmailService_DeleteEmailServer
            parameters:
                - name: server_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/email/servers/{server_id}:disable:
        patch:
            tags:
                - EmailService
            operationId: EmailService_DisableEmailServer
            parameters:
                - name: server_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/email/servers/{server_id}:enable:
        patch:
            tags:
                - EmailService
            operationId: EmailService_EnableEmailServer
            parameters:
                - name: server_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/EnableEmailServerResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/email/templates/placeholders:
        get:
            tags:
                - EmailService
            operationId: EmailService_GetTemplatePlaceholders
            parameters:
                - name: use_case
                  in: query
                  schema:
                    type: integer
                    format: enum
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetPlaceholdersResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/environments:
        get:
            tags:
                - EnvironmentService
            operationId: EnvironmentService_ListEnvironment
            parameters:
                - name: page_size
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: page_token
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListEnvironmentsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - EnvironmentService
            operationId: EnvironmentService_CreateEnvironment
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateEnvironment'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateEnvironmentResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/environments/-/portal_customizations:
        get:
            tags:
                - EnvironmentService
            operationId: EnvironmentService_GetPortalCustomization
            parameters:
                - name: id
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetPortalCustomizationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/environments/-/roles:
        get:
            tags:
                - RolesService
            operationId: RolesService_ListRoles
            parameters:
                - name: env_id
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListRolesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - RolesService
            operationId: RolesService_CreateRole
            parameters:
                - name: env_id
                  in: query
                  schema:
                    type: string
                - name: role.name
                  in: query
                  schema:
                    type: string
                - name: role.display_name
                  in: query
                  schema:
                    type: string
                - name: role.description
                  in: query
                  schema:
                    type: string
                - name: role.default
                  in: query
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateRoleResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/environments/-/roles/{id}:
        get:
            tags:
                - RolesService
            operationId: RolesService_GetRole
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: env_id
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetRoleResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - RolesService
            operationId: RolesService_UpdateRole
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: env_id
                  in: query
                  schema:
                    type: string
                - name: role.display_name
                  in: query
                  schema:
                    type: string
                - name: role.description
                  in: query
                  schema:
                    type: string
                - name: role.default
                  in: query
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateRoleResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - RolesService
            operationId: RolesService_DeleteRole
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: env_id
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/environments/-/sessions:me:
        get:
            tags:
                - EnvironmentService
            operationId: EnvironmentService_GetCurrentSession
            parameters:
                - name: id
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetCurrentSessionResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/environments/{env_id}/roles:
        get:
            tags:
                - RolesService
            operationId: RolesService_ListRoles
            parameters:
                - name: env_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListRolesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - RolesService
            operationId: RolesService_CreateRole
            parameters:
                - name: env_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateRole'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateRoleResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/environments/{env_id}/roles/{id}:
        get:
            tags:
                - RolesService
            operationId: RolesService_GetRole
            parameters:
                - name: env_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetRoleResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - RolesService
            operationId: RolesService_UpdateRole
            parameters:
                - name: env_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateRole'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateRoleResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - RolesService
            operationId: RolesService_DeleteRole
            parameters:
                - name: env_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/environments/{environment_id}/contexts:
        get:
            tags:
                - EnvironmentService
            operationId: EnvironmentService_GetContext
            parameters:
                - name: environment_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetContextResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - EnvironmentService
            operationId: EnvironmentService_UpdateContext
            parameters:
                - name: environment_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/environments/{id}:
        get:
            tags:
                - EnvironmentService
            operationId: EnvironmentService_GetEnvironment
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetEnvironmentResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - EnvironmentService
            operationId: EnvironmentService_DeleteEnvironment
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - EnvironmentService
            operationId: EnvironmentService_UpdateEnvironment
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateEnvironment'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateEnvironmentResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/environments/{id}/asset:
        post:
            tags:
                - EnvironmentService
            operationId: EnvironmentService_CreateAssetUploadURL
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AssetSettings'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateAssetUploadUrlResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/environments/{id}/custom-domains:
        post:
            tags:
                - EnvironmentService
            operationId: EnvironmentService_CreateCustomDomain
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateCustomDomainRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateCustomDomainResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/environments/{id}/custom-domains:check:
        post:
            tags:
                - EnvironmentService
            operationId: EnvironmentService_CheckCustomDomainStatus
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetEnvironmentRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetEnvironmentResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/environments/{id}/dns:
        post:
            tags:
                - EnvironmentService
            operationId: EnvironmentService_GetRequiredDNSRecords
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetDNSRecordsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetDNSRecordsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/environments/{id}/dns:verify:
        post:
            tags:
                - EnvironmentService
            operationId: EnvironmentService_VerifyDNSRecords
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetDNSRecordsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/environments/{id}/features:
        get:
            tags:
                - EnvironmentService
            operationId: EnvironmentService_GetFeatures
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetFeaturesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - EnvironmentService
            operationId: EnvironmentService_UpdateFeatures
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/EnvironmentFeature'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetFeaturesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/environments/{id}/features/{feature_id}:disable:
        post:
            tags:
                - EnvironmentService
            operationId: EnvironmentService_DisableFeature
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: feature_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/environments/{id}/features/{feature_id}:enable:
        post:
            tags:
                - EnvironmentService
            operationId: EnvironmentService_EnableFeature
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: feature_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/environments/{id}/portal_customizations:
        get:
            tags:
                - EnvironmentService
            operationId: EnvironmentService_GetPortalCustomization
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetPortalCustomizationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - EnvironmentService
            operationId: EnvironmentService_UpdatePortalCustomization
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdatePortalCustomizationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/environments/{id}/saml-certificates:generate:
        post:
            tags:
                - EnvironmentService
            operationId: EnvironmentService_GenerateNewSamlCertificate
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GenerateSamlCertificateRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GenerateSamlCertificateResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/environments/{id}/session-settings:
        get:
            tags:
                - EnvironmentService
            operationId: EnvironmentService_GetEnvironmentSessionSettings
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetEnvironmentSessionSettingsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - EnvironmentService
            operationId: EnvironmentService_CreateEnvironmentSessionSettings
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SessionSettings'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateEnvironmentSessionSettingsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - EnvironmentService
            operationId: EnvironmentService_UpdateEnvironmentSessionSettings
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SessionSettings'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateEnvironmentSessionSettingsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/environments/{id}/sessions:me:
        get:
            tags:
                - EnvironmentService
            operationId: EnvironmentService_GetCurrentSession
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetCurrentSessionResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/environments/{id}:update:
        patch:
            tags:
                - EnvironmentService
            operationId: EnvironmentService_UpdateEnvironmentDomain
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateEnvironmentDomain'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateEnvironmentResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/events:
        post:
            tags:
                - EventsService
            operationId: EventsService_ListEvents
            parameters:
                - name: page_size
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: page_token
                  in: query
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/EventFilter'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListEventsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/events/frontend_events/{event_type}:
        post:
            tags:
                - EventsService
            operationId: EventsService_SendCustomEvent
            parameters:
                - name: event_type
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SendCustomEventResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/members:
        get:
            tags:
                - MembersService
            operationId: MembersService_ListMembers
            parameters:
                - name: page_size
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: page_token
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListMemberResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - MembersService
            operationId: MembersService_CreateMember
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Member'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateMemberResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/members/{id}:
        get:
            tags:
                - MembersService
            operationId: MembersService_GetMember
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMemberResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - MembersService
            operationId: MembersService_DeleteMember
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - MembersService
            operationId: MembersService_UpdateMember
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateMember'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateMemberResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/members:this:
        get:
            tags:
                - MembersService
            operationId: MembersService_GetCurrentMember
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMemberResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - MembersService
            operationId: MembersService_UpdateCurrentMember
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateMember'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateMemberResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/organizations:
        get:
            tags:
                - OrganizationService
            operationId: OrganizationService_ListOrganization
            parameters:
                - name: page_size
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: page_token
                  in: query
                  schema:
                    type: string
                - name: external_id
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListOrganizationsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - OrganizationService
            description: Create Organization
            operationId: OrganizationService_CreateOrganization
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateOrganization'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateOrganizationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/organizations/-/domains:
        get:
            tags:
                - DomainService
            operationId: DomainService_ListDomains
            parameters:
                - name: organization_id
                  in: query
                  schema:
                    type: string
                - name: external_id
                  in: query
                  schema:
                    type: string
                - name: connection_id
                  in: query
                  schema:
                    type: string
                - name: include
                  in: query
                  schema:
                    type: string
                - name: page_size
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: page_number
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDomainResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - DomainService
            operationId: DomainService_CreateDomain
            parameters:
                - name: organization_id
                  in: query
                  schema:
                    type: string
                - name: external_id
                  in: query
                  schema:
                    type: string
                - name: connection_id
                  in: query
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateDomain'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateDomainResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - DomainService
            operationId: DomainService_UpdateDomain
            parameters:
                - name: organization_id
                  in: query
                  schema:
                    type: string
                - name: external_id
                  in: query
                  schema:
                    type: string
                - name: connection_id
                  in: query
                  schema:
                    type: string
                - name: id
                  in: query
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateDomain'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateDomainResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/organizations/-/domains/{id}:
        get:
            tags:
                - DomainService
            operationId: DomainService_GetDomain
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: organization_id
                  in: query
                  schema:
                    type: string
                - name: external_id
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetDomainResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - DomainService
            operationId: DomainService_DeleteDomain
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: organization_id
                  in: query
                  schema:
                    type: string
                - name: external_id
                  in: query
                  schema:
                    type: string
                - name: connection_id
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/organizations/-/email/templates:
        get:
            tags:
                - EmailService
            operationId: EmailService_ListEmailTemplates
            parameters:
                - name: organization_id
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListEmailTemplateResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - EmailService
            operationId: EmailService_CreateEmailTemplate
            parameters:
                - name: organization_id
                  in: query
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateEmailTemplate'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateEmailTemplateResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/organizations/-/email/templates/{template_id}:
        get:
            tags:
                - EmailService
            operationId: EmailService_GetEmailTemplate
            parameters:
                - name: template_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: organization_id
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetEmailTemplateResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - EmailService
            operationId: EmailService_DeleteEmailTemplate
            parameters:
                - name: template_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: organization_id
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - EmailService
            operationId: EmailService_UpdateEmailTemplate
            parameters:
                - name: template_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: organization_id
                  in: query
                  schema:
                    type: string
                - name: update_mask
                  in: query
                  schema:
                    type: string
                    format: field-mask
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateTemplate'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetEmailTemplateResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/organizations/-/email/templates/{template_id}:disable:
        patch:
            tags:
                - EmailService
            operationId: EmailService_DisableEmailTemplate
            parameters:
                - name: template_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: organization_id
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/organizations/-/email/templates/{template_id}:enable:
        patch:
            tags:
                - EmailService
            operationId: EmailService_EnableEmailTemplate
            parameters:
                - name: template_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: organization_id
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/EnableEmailTemplateResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/organizations/{id}:
        get:
            tags:
                - OrganizationService
            operationId: OrganizationService_GetOrganization
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: external_id
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetOrganizationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - OrganizationService
            description: Delete an Organization
            operationId: OrganizationService_DeleteOrganization
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: external_id
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - OrganizationService
            operationId: OrganizationService_UpdateOrganization
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: external_id
                  in: query
                  schema:
                    type: string
                - name: update_mask
                  in: query
                  schema:
                    type: string
                    format: field-mask
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateOrganization'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateOrganizationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/organizations/{id}/portal_links:
        get:
            tags:
                - OrganizationService
            operationId: OrganizationService_GetPortalLinks
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetPortalLinksResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - OrganizationService
            description: Generate Portal Link for Org
            operationId: OrganizationService_GeneratePortalLink
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: sso
                  in: query
                  description: 'Deprecated: Use features'
                  schema:
                    type: boolean
                - name: directory_sync
                  in: query
                  description: 'Deprecated: Use features'
                  schema:
                    type: boolean
                - name: features
                  in: query
                  schema:
                    type: array
                    items:
                        type: integer
                        format: enum
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GeneratePortalLinkResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - OrganizationService
            operationId: OrganizationService_DeletePortalLink
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/organizations/{id}/portal_links/{link_id}:
        delete:
            tags:
                - OrganizationService
            operationId: OrganizationService_DeletePortalLinkByID
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: link_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/organizations/{id}/session-settings:
        get:
            tags:
                - OrganizationService
            operationId: OrganizationService_GetOrganizationSessionSettings
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: environment_id
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetOrganizationSessionSettingsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - OrganizationService
            operationId: OrganizationService_CreateOrganizationSessionSettings
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: environment_id
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateOrganizationSessionSettingsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - OrganizationService
            operationId: OrganizationService_DeleteOrganizationSessionSettings
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: environment_id
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - OrganizationService
            operationId: OrganizationService_UpdateOrganizationSessionSettings
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: environment_id
                  in: query
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/OrganizationSessionSettings'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateOrganizationSessionSettingsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/organizations/{id}/settings:
        patch:
            tags:
                - OrganizationService
            operationId: OrganizationService_UpdateOrganizationSettings
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/OrganizationSettings'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetOrganizationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/organizations/{organization_id}/connections:
        post:
            tags:
                - ConnectionService
            operationId: ConnectionService_CreateConnection
            parameters:
                - name: organization_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateConnection'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateConnectionResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/organizations/{organization_id}/connections/{id}:
        get:
            tags:
                - ConnectionService
            operationId: ConnectionService_GetConnection
            parameters:
                - name: organization_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetConnectionResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - ConnectionService
            operationId: ConnectionService_DeleteConnection
            parameters:
                - name: organization_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - ConnectionService
            operationId: ConnectionService_UpdateConnection
            parameters:
                - name: organization_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateConnection'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateConnectionResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/organizations/{organization_id}/connections/{id}:disable:
        patch:
            tags:
                - ConnectionService
            operationId: ConnectionService_DisableConnection
            parameters:
                - name: organization_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ToggleConnectionResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/organizations/{organization_id}/connections/{id}:enable:
        patch:
            tags:
                - ConnectionService
            operationId: ConnectionService_EnableConnection
            parameters:
                - name: organization_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ToggleConnectionResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/organizations/{organization_id}/directories:
        get:
            tags:
                - DirectoryService
            operationId: DirectoryService_ListDirectories
            parameters:
                - name: organization_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDirectoriesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - DirectoryService
            operationId: DirectoryService_CreateDirectory
            parameters:
                - name: organization_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateDirectory'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateDirectoryResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/organizations/{organization_id}/directories/{directory_id}/groups:
        get:
            tags:
                - DirectoryService
            operationId: DirectoryService_ListDirectoryGroups
            parameters:
                - name: organization_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: directory_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: page_size
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: page_token
                  in: query
                  schema:
                    type: string
                - name: updated_after
                  in: query
                  schema:
                    type: string
                    format: date-time
                - name: include_detail
                  in: query
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDirectoryGroupsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/organizations/{organization_id}/directories/{directory_id}/secrets:
        post:
            tags:
                - DirectoryService
            operationId: DirectoryService_CreateDirectorySecret
            parameters:
                - name: organization_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: directory_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateDirectorySecretResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/organizations/{organization_id}/directories/{directory_id}/secrets:regenerate:
        post:
            tags:
                - DirectoryService
            operationId: DirectoryService_RegenerateDirectorySecret
            parameters:
                - name: organization_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: directory_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RegenerateDirectorySecretResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/organizations/{organization_id}/directories/{directory_id}/users:
        get:
            tags:
                - DirectoryService
            operationId: DirectoryService_ListDirectoryUsers
            parameters:
                - name: organization_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: directory_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: page_size
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: page_token
                  in: query
                  schema:
                    type: string
                - name: include_detail
                  in: query
                  schema:
                    type: boolean
                - name: directory_group_id
                  in: query
                  schema:
                    type: string
                - name: updated_after
                  in: query
                  schema:
                    type: string
                    format: date-time
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDirectoryUsersResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/organizations/{organization_id}/directories/{id}:
        get:
            tags:
                - DirectoryService
            operationId: DirectoryService_GetDirectory
            parameters:
                - name: organization_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetDirectoryResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - DirectoryService
            operationId: DirectoryService_DeleteDirectory
            parameters:
                - name: organization_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - DirectoryService
            operationId: DirectoryService_UpdateDirectory
            parameters:
                - name: organization_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateDirectory'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateDirectoryResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/organizations/{organization_id}/directories/{id}/attributes:
        put:
            tags:
                - DirectoryService
            operationId: DirectoryService_UpdateAttributes
            parameters:
                - name: organization_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AttributeMappings'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateAttributesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/organizations/{organization_id}/directories/{id}/groups/-/roles:assign:
        put:
            tags:
                - DirectoryService
            operationId: DirectoryService_AssignRoles
            parameters:
                - name: organization_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RoleAssignments'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AssignRolesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/organizations/{organization_id}/directories/{id}:disable:
        patch:
            tags:
                - DirectoryService
            operationId: DirectoryService_DisableDirectory
            parameters:
                - name: organization_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ToggleDirectoryResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/organizations/{organization_id}/directories/{id}:enable:
        patch:
            tags:
                - DirectoryService
            operationId: DirectoryService_EnableDirectory
            parameters:
                - name: organization_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ToggleDirectoryResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/organizations/{organization_id}/domains:
        get:
            tags:
                - DomainService
            operationId: DomainService_ListDomains
            parameters:
                - name: organization_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: external_id
                  in: query
                  schema:
                    type: string
                - name: connection_id
                  in: query
                  schema:
                    type: string
                - name: include
                  in: query
                  schema:
                    type: string
                - name: page_size
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: page_number
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDomainResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - DomainService
            operationId: DomainService_CreateDomain
            parameters:
                - name: organization_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: external_id
                  in: query
                  schema:
                    type: string
                - name: connection_id
                  in: query
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateDomain'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateDomainResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/organizations/{organization_id}/domains/{id}:
        get:
            tags:
                - DomainService
            operationId: DomainService_GetDomain
            parameters:
                - name: organization_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: external_id
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetDomainResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - DomainService
            operationId: DomainService_DeleteDomain
            parameters:
                - name: organization_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: external_id
                  in: query
                  schema:
                    type: string
                - name: connection_id
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - DomainService
            operationId: DomainService_UpdateDomain
            parameters:
                - name: organization_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: external_id
                  in: query
                  schema:
                    type: string
                - name: connection_id
                  in: query
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateDomain'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateDomainResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/organizations/{organization_id}/email/templates:
        get:
            tags:
                - EmailService
            operationId: EmailService_ListEmailTemplates
            parameters:
                - name: organization_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListEmailTemplateResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - EmailService
            operationId: EmailService_CreateEmailTemplate
            parameters:
                - name: organization_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateEmailTemplate'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateEmailTemplateResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/organizations/{organization_id}/email/templates/{template_id}:
        get:
            tags:
                - EmailService
            operationId: EmailService_GetEmailTemplate
            parameters:
                - name: organization_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: template_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetEmailTemplateResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - EmailService
            operationId: EmailService_DeleteEmailTemplate
            parameters:
                - name: organization_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: template_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - EmailService
            operationId: EmailService_UpdateEmailTemplate
            parameters:
                - name: organization_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: template_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: update_mask
                  in: query
                  schema:
                    type: string
                    format: field-mask
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateTemplate'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetEmailTemplateResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/organizations/{organization_id}/email/templates/{template_id}:disable:
        patch:
            tags:
                - EmailService
            operationId: EmailService_DisableEmailTemplate
            parameters:
                - name: organization_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: template_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/organizations/{organization_id}/email/templates/{template_id}:enable:
        patch:
            tags:
                - EmailService
            operationId: EmailService_EnableEmailTemplate
            parameters:
                - name: organization_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: template_id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/EnableEmailTemplateResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/organizations/{organization_id}/users:
        get:
            tags:
                - UserService
            operationId: UserService_ListUsers
            parameters:
                - name: organization_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: page_size
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: page_token
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - UserService
            operationId: UserService_CreateUser
            parameters:
                - name: organization_id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/User'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/organizations/{organization_id}/users/{id}:
        get:
            tags:
                - UserService
            operationId: UserService_GetUser
            parameters:
                - name: organization_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: external_id
                  in: query
                  schema:
                    type: string
                - name: identity
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - UserService
            operationId: UserService_AddUserToOrganization
            parameters:
                - name: organization_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: external_id
                  in: query
                  schema:
                    type: string
                - name: identity
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - UserService
            operationId: UserService_DeleteUser
            parameters:
                - name: organization_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: external_id
                  in: query
                  schema:
                    type: string
                - name: identity
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - UserService
            operationId: UserService_UpdateUser
            parameters:
                - name: organization_id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: external_id
                  in: query
                  schema:
                    type: string
                - name: identity
                  in: query
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateUser'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/organizations:search:
        get:
            tags:
                - OrganizationService
            operationId: OrganizationService_SearchOrganization
            parameters:
                - name: query
                  in: query
                  schema:
                    type: string
                - name: page_size
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: page_token
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SearchOrganizationsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/providers:
        get:
            tags:
                - ConnectionService
            operationId: ConnectionService_GetProviders
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetProvidersResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/signup:
        post:
            tags:
                - WorkspaceService
            operationId: WorkspaceService_CreateWorkspace
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateWorkspace'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateWorkspaceResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/sso-user-attributes:
        get:
            tags:
                - UserAttributeService
            operationId: UserAttributeService_ListSsoUserAttributes
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUserAttributesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - UserAttributeService
            operationId: UserAttributeService_CreateSsoUserAttribute
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UserAttribute'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateUserAttributeResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/sso-user-attributes/{key}:
        delete:
            tags:
                - UserAttributeService
            operationId: UserAttributeService_DeleteSsoUserAttribute
            parameters:
                - name: key
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - UserAttributeService
            operationId: UserAttributeService_UpdateSsoUserAttribute
            parameters:
                - name: key
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UserAttribute'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateUserAttributeResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/user-profile-attributes:
        get:
            tags:
                - UserAttributeService
            operationId: UserAttributeService_ListSsoUserAttributes
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUserAttributesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - UserAttributeService
            operationId: UserAttributeService_CreateSsoUserAttribute
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UserAttribute'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateUserAttributeResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/user-profile-attributes/{key}:
        delete:
            tags:
                - UserAttributeService
            operationId: UserAttributeService_DeleteSsoUserAttribute
            parameters:
                - name: key
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - UserAttributeService
            operationId: UserAttributeService_UpdateSsoUserAttribute
            parameters:
                - name: key
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UserAttribute'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateUserAttributeResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/webhooks/portal-url:
        get:
            tags:
                - WebhookService
            operationId: WebhookService_GetPortalURL
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetPortalURLResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/webhooks/test-event/{event_type}:
        post:
            tags:
                - WebhookService
            operationId: WebhookService_SendTestEvent
            parameters:
                - name: event_type
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SendTestEventResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/webhooks/wb/**:
        get:
            tags:
                - WebhookService
            operationId: WebhookService_WebhookWrapper
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - WebhookService
            operationId: WebhookService_WebhookWrapper
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - WebhookService
            operationId: WebhookService_WebhookWrapper
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - WebhookService
            operationId: WebhookService_WebhookWrapper
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - WebhookService
            operationId: WebhookService_WebhookWrapper
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/workspaces/{id}:
        get:
            tags:
                - WorkspaceService
            operationId: WorkspaceService_GetWorkspace
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetWorkspaceResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - WorkspaceService
            operationId: WorkspaceService_UpdateWorkspace
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateWorkspace'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateWorkspaceResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/workspaces/{id}/billing/customer-portal:
        get:
            tags:
                - WorkspaceService
            operationId: WorkspaceService_GetBillingPortal
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetBillingPortalResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/workspaces/{id}/billing/pricing-table:
        get:
            tags:
                - WorkspaceService
            operationId: WorkspaceService_GetWorkspacePricingTable
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetWorkspacePricingTableResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/workspaces/{id}/billing/subscriptions:
        get:
            tags:
                - WorkspaceService
            operationId: WorkspaceService_GetWorkspaceSubscriptions
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetWorkspaceSubscriptionsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/workspaces:onboard:
        patch:
            tags:
                - WorkspaceService
            operationId: WorkspaceService_OnboardWorkspace
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/OnboardWorkspace'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/workspaces:this:
        get:
            tags:
                - WorkspaceService
            operationId: WorkspaceService_GetCurrentWorkspace
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetWorkspaceResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - WorkspaceService
            operationId: WorkspaceService_UpdateCurrentWorkspace
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateWorkspace'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateWorkspaceResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /migrations/idp-simulator:
        post:
            tags:
                - MigrationService
            operationId: MigrationService_MigrateIdpSimulator
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MigrationServiceResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /migrations/saml-metadata:
        post:
            tags:
                - MigrationService
            operationId: MigrationService_MigrateSAMLMetadata
            parameters:
                - name: environment_ids
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
                - name: batch_size
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MigrationSAMLResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /migrations/webhook-provider:
        post:
            tags:
                - MigrationService
            operationId: MigrationService_MigrateWebhookProvider
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MigrationServiceResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        AddUserResponse:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/User'
        AssetSettings:
            type: object
            properties:
                category:
                    type: integer
                    format: enum
                extension:
                    type: string
        AssignRolesResponse:
            type: object
            properties:
                role_assignments:
                    $ref: '#/components/schemas/RoleAssignments'
        AttributeMapping:
            type: object
            properties:
                key:
                    type: string
                map_to:
                    type: string
        AttributeMappings:
            type: object
            properties:
                attributes:
                    type: array
                    items:
                        $ref: '#/components/schemas/AttributeMapping'
        AuthMethod:
            type: object
            properties:
                connection_id:
                    type: string
                connection_type:
                    type: integer
                    format: enum
                provider:
                    type: integer
                    format: enum
                auth_initiation_uri:
                    type: string
                passwordless_type:
                    type: integer
                    format: enum
                code_challenge_length:
                    type: integer
                    format: uint32
        Client:
            type: object
            properties:
                id:
                    type: string
                keyId:
                    type: string
                create_time:
                    type: string
                    format: date-time
                update_time:
                    type: string
                    format: date-time
                redirect_uris:
                    type: array
                    items:
                        type: string
                default_redirect_uri:
                    type: string
                secrets:
                    type: array
                    items:
                        $ref: '#/components/schemas/ClientSecret'
                post_logout_redirect_uris:
                    type: array
                    items:
                        type: string
                back_channel_logout_uri:
                    type: string
                initiate_login_uri:
                    type: string
        ClientSecret:
            type: object
            properties:
                id:
                    type: string
                create_time:
                    type: string
                    format: date-time
                update_time:
                    type: string
                    format: date-time
                secret_suffix:
                    type: string
                created_by:
                    type: string
                status:
                    type: integer
                    format: enum
                expire_time:
                    type: string
                    format: date-time
                last_used_time:
                    type: string
                    format: date-time
                plain_secret:
                    type: string
        Connection:
            type: object
            properties:
                id:
                    type: string
                provider:
                    type: integer
                    format: enum
                type:
                    type: integer
                    format: enum
                status:
                    readOnly: true
                    type: integer
                    format: enum
                enabled:
                    type: boolean
                debug_enabled:
                    type: boolean
                organization_id:
                    type: string
                ui_button_title:
                    type: string
                configuration_type:
                    type: integer
                    format: enum
                test_connection_uri:
                    type: string
                attribute_mapping:
                    type: object
                    additionalProperties:
                        type: string
                create_time:
                    readOnly: true
                    type: string
                    format: date-time
                update_time:
                    readOnly: true
                    type: string
                    format: date-time
                oidc_config:
                    $ref: '#/components/schemas/OIDCConnectionConfig'
                saml_config:
                    $ref: '#/components/schemas/SAMLConnectionConfigResponse'
                oauth_config:
                    $ref: '#/components/schemas/OAuthConnectionConfig'
                passwordless_config:
                    $ref: '#/components/schemas/PasswordLessConfig'
                key_id:
                    type: string
        CreateAssetUploadUrlResponse:
            type: object
            properties:
                upload_url:
                    type: string
                fetch_url:
                    type: string
        CreateClientSecretResponse:
            type: object
            properties:
                plain_secret:
                    type: string
                secret:
                    $ref: '#/components/schemas/ClientSecret'
        CreateConnection:
            type: object
            properties:
                provider:
                    type: integer
                    format: enum
                type:
                    type: integer
                    format: enum
        CreateConnectionResponse:
            type: object
            properties:
                connection:
                    $ref: '#/components/schemas/Connection'
        CreateCustomDomainRequest:
            type: object
            properties:
                id:
                    type: string
                custom_domain:
                    type: string
        CreateCustomDomainResponse:
            type: object
            properties:
                environment:
                    $ref: '#/components/schemas/Environment'
        CreateDirectory:
            type: object
            properties:
                directory_type:
                    type: integer
                    format: enum
                directory_provider:
                    type: integer
                    format: enum
        CreateDirectoryResponse:
            type: object
            properties:
                directory:
                    $ref: '#/components/schemas/Directory'
        CreateDirectorySecretResponse:
            type: object
            properties:
                plain_secret:
                    type: string
                secret:
                    $ref: '#/components/schemas/Secret'
        CreateDomain:
            type: object
            properties:
                domain:
                    type: string
        CreateDomainResponse:
            type: object
            properties:
                domain:
                    $ref: '#/components/schemas/Domain'
        CreateEmailServerRequest:
            type: object
            properties:
                provider:
                    type: integer
                    format: enum
                settings:
                    $ref: '#/components/schemas/SMTPServerSettings'
        CreateEmailServerResponse:
            type: object
            properties:
                server:
                    $ref: '#/components/schemas/EmailServer'
        CreateEmailTemplate:
            type: object
            properties:
                updated_at:
                    readOnly: true
                    type: string
                    format: date-time
                id:
                    readOnly: true
                    type: string
                use_case:
                    type: integer
                    format: enum
                subject:
                    type: string
                html_content:
                    type: string
                plain_content:
                    type: string
        CreateEmailTemplateResponse:
            type: object
            properties:
                template:
                    $ref: '#/components/schemas/Template'
        CreateEnvironment:
            type: object
            properties:
                display_name:
                    type: string
                region_code:
                    type: integer
                    format: enum
                type:
                    type: integer
                    format: enum
        CreateEnvironmentResponse:
            type: object
            properties:
                environment:
                    $ref: '#/components/schemas/Environment'
        CreateEnvironmentSessionSettingsResponse:
            type: object
            properties:
                environment_id:
                    type: string
                session_settings:
                    $ref: '#/components/schemas/SessionSettings'
        CreateMemberResponse:
            type: object
            properties:
                member:
                    $ref: '#/components/schemas/Member'
        CreateOrganization:
            type: object
            properties:
                display_name:
                    type: string
                region_code:
                    type: integer
                    format: enum
                external_id:
                    type: string
                metadata:
                    type: object
                    additionalProperties:
                        type: string
        CreateOrganizationResponse:
            type: object
            properties:
                organization:
                    $ref: '#/components/schemas/Organization'
        CreateOrganizationSessionSettingsResponse:
            type: object
            properties:
                environment_id:
                    type: string
                organization_id:
                    type: string
                session_settings:
                    $ref: '#/components/schemas/OrganizationSessionSettings'
        CreateRole:
            type: object
            properties:
                name:
                    type: string
                display_name:
                    type: string
                description:
                    type: string
                default:
                    type: boolean
        CreateRoleResponse:
            type: object
            properties:
                role:
                    $ref: '#/components/schemas/Role'
        CreateUserAttributeResponse:
            type: object
            properties:
                user_attribute:
                    $ref: '#/components/schemas/UserAttribute'
        CreateUserResponse:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/User'
        CreateWorkspace:
            type: object
            properties:
                email:
                    type: string
                company:
                    type: string
        CreateWorkspaceResponse:
            type: object
            properties:
                workspace:
                    $ref: '#/components/schemas/Workspace'
                link:
                    type: string
        DNSRecords:
            type: object
            properties:
                host_name:
                    type: string
                type:
                    type: string
                value:
                    type: string
        Directory:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                directory_type:
                    type: integer
                    format: enum
                organization_id:
                    type: string
                enabled:
                    type: boolean
                directory_provider:
                    type: integer
                    format: enum
                last_synced_at:
                    type: string
                    format: date-time
                directory_endpoint:
                    type: string
                total_users:
                    type: integer
                    format: int32
                total_groups:
                    type: integer
                    format: int32
                secrets:
                    type: array
                    items:
                        $ref: '#/components/schemas/Secret'
                stats:
                    $ref: '#/components/schemas/Stats'
                role_assignments:
                    $ref: '#/components/schemas/RoleAssignments'
                attribute_mappings:
                    $ref: '#/components/schemas/AttributeMappings'
        DirectoryGroup:
            type: object
            properties:
                id:
                    type: string
                display_name:
                    type: string
                total_users:
                    type: integer
                    format: int32
                updated_at:
                    type: string
                    format: date-time
                group_detail:
                    type: object
        DirectoryMapping:
            type: object
            properties:
                key:
                    type: string
                map_to:
                    type: string
                display_name:
                    type: string
        DirectoryUser:
            type: object
            properties:
                id:
                    type: string
                email:
                    type: string
                preferred_username:
                    type: string
                given_name:
                    type: string
                family_name:
                    type: string
                updated_at:
                    type: string
                    format: date-time
                emails:
                    type: array
                    items:
                        type: string
                groups:
                    type: array
                    items:
                        $ref: '#/components/schemas/DirectoryGroup'
                user_detail:
                    type: object
        DirectoryUserAdditionalInfo:
            type: object
            properties: {}
        DiscoveryAuthMethodResponse:
            type: object
            properties:
                auth_method:
                    $ref: '#/components/schemas/AuthMethod'
        DiscoveryRequest:
            type: object
            properties:
                email:
                    type: string
        Domain:
            type: object
            properties:
                id:
                    type: string
                domain:
                    type: string
                environment_id:
                    type: string
                organization_id:
                    type: string
                connection_id:
                    type: string
                txt_record_key:
                    type: string
                txt_record_secret:
                    type: string
                verification_status:
                    type: integer
                    format: enum
                create_time:
                    type: string
                    format: date-time
                update_time:
                    type: string
                    format: date-time
                created_by:
                    type: string
        EmailServer:
            type: object
            properties:
                updated_at:
                    readOnly: true
                    type: string
                    format: date-time
                id:
                    readOnly: true
                    type: string
                provider:
                    type: integer
                    format: enum
                enabled:
                    type: boolean
                smtp_settings:
                    $ref: '#/components/schemas/SMTPServerSettings'
        EnableEmailServerResponse:
            type: object
            properties:
                active_server_id:
                    type: string
                last_active_server_id:
                    type: string
        EnableEmailTemplateResponse:
            type: object
            properties:
                active_template_id:
                    type: string
                last_active_template_id:
                    type: string
        Environment:
            type: object
            properties:
                id:
                    type: string
                create_time:
                    type: string
                    format: date-time
                update_time:
                    type: string
                    format: date-time
                display_name:
                    type: string
                domain:
                    type: string
                region_code:
                    type: integer
                    format: enum
                type:
                    type: integer
                    format: enum
                custom_domain:
                    type: string
                custom_domain_status:
                    type: integer
                    format: enum
        EnvironmentFeature:
            type: object
            properties:
                name:
                    type: string
                enabled:
                    type: boolean
        EventFilter:
            type: object
            properties:
                event_types:
                    type: array
                    items:
                        type: string
                start_time:
                    type: string
                    format: date-time
                end_time:
                    type: string
                    format: date-time
                organization_id:
                    type: string
                source:
                    type: integer
                    format: enum
        GeneratePortalLinkResponse:
            type: object
            properties:
                link:
                    $ref: '#/components/schemas/Link'
        GenerateSamlCertificateRequest:
            type: object
            properties:
                id:
                    type: string
        GenerateSamlCertificateResponse:
            type: object
            properties:
                id:
                    type: string
                certificate:
                    type: string
                expiry:
                    type: string
        GetAuthCustomizationsResponse:
            type: object
            properties:
                customizations:
                    type: object
        GetBillingPortalResponse:
            type: object
            properties:
                url:
                    type: string
                id:
                    type: string
        GetClientResponse:
            type: object
            properties:
                client:
                    $ref: '#/components/schemas/Client'
        GetConnectionResponse:
            type: object
            properties:
                connection:
                    $ref: '#/components/schemas/Connection'
        GetConnectionTestResultResponse:
            type: object
            properties:
                status:
                    type: integer
                    format: enum
                user_info:
                    type: string
                error:
                    type: string
                error_description:
                    type: string
                error_details:
                    type: string
        GetContextResponse:
            type: object
            properties:
                context:
                    type: object
        GetCurrentSessionResponse:
            type: object
            properties:
                session_expiry:
                    type: string
                    format: date-time
                access_token_expiry:
                    type: string
                    format: date-time
                organization_id:
                    type: string
                subject:
                    type: string
        GetDNSRecordsRequest:
            type: object
            properties:
                id:
                    type: string
                custom_domain:
                    type: string
        GetDNSRecordsResponse:
            type: object
            properties:
                dns_records:
                    type: array
                    items:
                        $ref: '#/components/schemas/DNSRecords'
        GetDirectoryResponse:
            type: object
            properties:
                directory:
                    $ref: '#/components/schemas/Directory'
        GetDomainResponse:
            type: object
            properties:
                domain:
                    $ref: '#/components/schemas/Domain'
        GetEmailServerResponse:
            type: object
            properties:
                server:
                    $ref: '#/components/schemas/EmailServer'
        GetEmailTemplateResponse:
            type: object
            properties:
                template:
                    $ref: '#/components/schemas/Template'
        GetEnvironmentRequest:
            type: object
            properties:
                id:
                    type: string
        GetEnvironmentResponse:
            type: object
            properties:
                environment:
                    $ref: '#/components/schemas/Environment'
        GetEnvironmentSessionSettingsResponse:
            type: object
            properties:
                session_settings:
                    $ref: '#/components/schemas/SessionSettings'
        GetFeaturesResponse:
            type: object
            properties:
                features:
                    type: array
                    items:
                        $ref: '#/components/schemas/EnvironmentFeature'
        GetMemberResponse:
            type: object
            properties:
                member:
                    $ref: '#/components/schemas/Member'
        GetOrganizationResponse:
            type: object
            properties:
                organization:
                    $ref: '#/components/schemas/Organization'
        GetOrganizationSessionSettingsResponse:
            type: object
            properties:
                environment_id:
                    type: string
                organization_id:
                    type: string
                session_settings:
                    $ref: '#/components/schemas/OrganizationSessionSettings'
        GetPlaceholdersResponse:
            type: object
            properties:
                placeholders:
                    readOnly: true
                    type: array
                    items:
                        type: string
        GetPortalCustomizationResponse:
            type: object
            properties:
                environmentId:
                    type: string
                customization_settings:
                    type: object
        GetPortalLinksResponse:
            type: object
            properties:
                links:
                    type: array
                    items:
                        $ref: '#/components/schemas/Link'
        GetPortalURLResponse:
            type: object
            properties:
                url:
                    type: string
        GetProvidersResponse:
            type: object
            properties:
                providers:
                    type: array
                    items:
                        $ref: '#/components/schemas/Provider'
        GetRoleResponse:
            type: object
            properties:
                role:
                    $ref: '#/components/schemas/Role'
        GetUserResponse:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/User'
        GetWorkspacePricingTableResponse:
            type: object
            properties:
                id:
                    type: string
                pricing_table_id:
                    type: string
                publishable_token:
                    type: string
                customer_session_client_secret:
                    type: string
                expiry:
                    type: string
                    format: date-time
        GetWorkspaceResponse:
            type: object
            properties:
                workspace:
                    $ref: '#/components/schemas/Workspace'
        GetWorkspaceSubscriptionsResponse:
            type: object
            properties:
                id:
                    type: string
                subscriptions:
                    type: array
                    items:
                        $ref: '#/components/schemas/Subscription'
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        IDPCertificate:
            type: object
            properties:
                certificate:
                    type: string
                create_time:
                    type: string
                    format: date-time
                expiry_time:
                    type: string
                    format: date-time
                id:
                    type: string
                issuer:
                    type: string
        Link:
            type: object
            properties:
                id:
                    type: string
                location:
                    type: string
                expire_time:
                    type: string
                    format: date-time
        ListAuthMethodsResponse:
            type: object
            properties:
                auth_methods:
                    type: array
                    items:
                        $ref: '#/components/schemas/AuthMethod'
        ListAuthorizedDomainResponse:
            type: object
            properties:
                domains:
                    type: array
                    items:
                        type: string
        ListClientsResponse:
            type: object
            properties:
                total_size:
                    type: integer
                    format: uint32
                clients:
                    type: array
                    items:
                        $ref: '#/components/schemas/Client'
        ListConnection:
            type: object
            properties:
                id:
                    type: string
                provider:
                    type: integer
                    format: enum
                type:
                    type: integer
                    format: enum
                status:
                    readOnly: true
                    type: integer
                    format: enum
                enabled:
                    type: boolean
                organization_id:
                    type: string
                ui_button_title:
                    type: string
        ListConnectionsResponse:
            type: object
            properties:
                connections:
                    type: array
                    items:
                        $ref: '#/components/schemas/ListConnection'
        ListDirectoriesResponse:
            type: object
            properties:
                directories:
                    type: array
                    items:
                        $ref: '#/components/schemas/Directory'
        ListDirectoryGroupsResponse:
            type: object
            properties:
                groups:
                    type: array
                    items:
                        $ref: '#/components/schemas/DirectoryGroup'
                total_size:
                    type: integer
                    format: uint32
                next_page_token:
                    type: string
                prev_page_token:
                    type: string
        ListDirectoryUsersResponse:
            type: object
            properties:
                users:
                    type: array
                    items:
                        $ref: '#/components/schemas/DirectoryUser'
                total_size:
                    type: integer
                    format: uint32
                next_page_token:
                    type: string
                prev_page_token:
                    type: string
        ListDomainResponse:
            type: object
            properties:
                page_size:
                    type: integer
                    format: int32
                page_number:
                    type: integer
                    format: int32
                domains:
                    type: array
                    items:
                        $ref: '#/components/schemas/Domain'
        ListEmailServerResponse:
            type: object
            properties:
                servers:
                    type: array
                    items:
                        $ref: '#/components/schemas/EmailServer'
        ListEmailTemplateResponse:
            type: object
            properties:
                templates:
                    type: array
                    items:
                        $ref: '#/components/schemas/Template'
        ListEnvironmentsResponse:
            type: object
            properties:
                next_page_token:
                    type: string
                total_size:
                    type: integer
                    format: uint32
                environments:
                    type: array
                    items:
                        $ref: '#/components/schemas/Environment'
        ListEventsResponse:
            type: object
            properties:
                events:
                    type: array
                    items:
                        $ref: '#/components/schemas/ScalekitEvent'
                next_page_token:
                    type: string
                prev_page_token:
                    type: string
                total_size:
                    type: integer
                    format: uint32
        ListMemberResponse:
            type: object
            properties:
                next_page_token:
                    type: string
                total_size:
                    type: integer
                    format: uint32
                members:
                    type: array
                    items:
                        $ref: '#/components/schemas/Member'
        ListOrganizationsResponse:
            type: object
            properties:
                next_page_token:
                    type: string
                total_size:
                    type: integer
                    format: uint32
                organizations:
                    type: array
                    items:
                        $ref: '#/components/schemas/Organization'
                prev_page_token:
                    type: string
        ListRolesResponse:
            type: object
            properties:
                roles:
                    type: array
                    items:
                        $ref: '#/components/schemas/Role'
        ListUserAttributesResponse:
            type: object
            properties:
                user_attributes:
                    type: array
                    items:
                        $ref: '#/components/schemas/UserAttribute'
        ListUserResponse:
            type: object
            properties:
                next_page_token:
                    type: string
                total_size:
                    type: integer
                    format: uint32
                users:
                    type: array
                    items:
                        $ref: '#/components/schemas/User'
                prev_page_token:
                    type: string
        Member:
            type: object
            properties:
                id:
                    type: string
                create_time:
                    type: string
                    format: date-time
                update_time:
                    type: string
                    format: date-time
                workspace_id:
                    type: string
                role:
                    type: integer
                    format: enum
                first_name:
                    type: string
                last_name:
                    type: string
                email:
                    type: string
                metadata:
                    type: object
                    additionalProperties:
                        type: string
                organizations:
                    readOnly: true
                    type: array
                    items:
                        $ref: '#/components/schemas/OrganizationMembership'
                user_profile:
                    $ref: '#/components/schemas/UserProfile'
        MigrationSAMLResponse:
            type: object
            properties:
                success_environments:
                    type: integer
                    format: int32
                failed_environments:
                    type: integer
                    format: int32
        MigrationServiceResponse:
            type: object
            properties:
                success_environments:
                    type: integer
                    format: int32
                failed_environments:
                    type: integer
                    format: int32
        OAuthConnectionConfig:
            type: object
            properties:
                authorize_uri:
                    type: string
                token_uri:
                    type: string
                user_info_uri:
                    type: string
                client_id:
                    type: string
                client_secret:
                    type: string
                scopes:
                    type: array
                    items:
                        type: string
                redirect_uri:
                    type: string
                pkce_enabled:
                    type: boolean
                prompt:
                    type: string
                use_platform_creds:
                    type: boolean
        OIDCConnectionConfig:
            type: object
            properties:
                issuer:
                    type: string
                discovery_endpoint:
                    type: string
                authorize_uri:
                    type: string
                token_uri:
                    type: string
                user_info_uri:
                    type: string
                jwks_uri:
                    type: string
                client_id:
                    type: string
                client_secret:
                    type: string
                scopes:
                    type: array
                    items:
                        type: integer
                        format: enum
                token_auth_type:
                    type: integer
                    format: enum
                redirect_uri:
                    type: string
                pkce_enabled:
                    type: boolean
                idp_logout_required:
                    type: boolean
                post_logout_redirect_uri:
                    readOnly: true
                    type: string
                backchannel_logout_redirect_uri:
                    readOnly: true
                    type: string
        OTPRequest:
            type: object
            properties:
                code_challenge:
                    type: string
        OnboardWorkspace:
            type: object
            properties:
                workspace_display_name:
                    type: string
                user_given_name:
                    type: string
                user_family_name:
                    type: string
        Organization:
            required:
                - create_time
            type: object
            properties:
                id:
                    type: string
                    description: Id
                create_time:
                    type: string
                    description: Created Time
                    format: date-time
                update_time:
                    type: string
                    description: Updated time
                    format: date-time
                display_name:
                    type: string
                    description: Name of the org to be used in display
                region_code:
                    type: integer
                    description: Optional regioncode
                    format: enum
                external_id:
                    type: string
                    description: External Id is useful to store a unique identifier for a given Org that. The unique Identifier can be the id of your tenant / org in your SaaSApp
                metadata:
                    type: object
                    additionalProperties:
                        type: string
                    description: Key value pairs extension attributes.
                settings:
                    allOf:
                        - $ref: '#/components/schemas/OrganizationSettings'
                    description: Organization Settings
        OrganizationMembership:
            type: object
            properties:
                id:
                    type: string
                membership_status:
                    type: integer
                    format: enum
                role:
                    type: integer
                    format: enum
                name:
                    type: string
                primary_identity_provider:
                    type: integer
                    format: enum
        OrganizationSessionSettings:
            type: object
            properties:
                absolute_session_timeout:
                    type: integer
                    format: int32
                session_management_enabled:
                    type: boolean
                idle_session_timeout:
                    type: integer
                    format: int32
                idle_session_enabled:
                    type: boolean
        OrganizationSettings:
            type: object
            properties:
                features:
                    type: array
                    items:
                        $ref: '#/components/schemas/OrganizationSettingsFeature'
        OrganizationSettingsFeature:
            type: object
            properties:
                name:
                    type: string
                enabled:
                    type: boolean
        PasswordLessConfig:
            type: object
            properties:
                type:
                    type: integer
                    format: enum
                frequency:
                    type: integer
                    format: uint32
                validity:
                    type: integer
                    format: uint32
                enforce_same_browser_origin:
                    type: boolean
                code_challenge_length:
                    type: integer
                    format: uint32
                code_challenge_type:
                    type: integer
                    format: enum
        Provider:
            type: object
            properties:
                key_id:
                    type: string
                display_name:
                    type: string
                description:
                    type: string
        RegenerateDirectorySecretResponse:
            type: object
            properties:
                plain_secret:
                    type: string
                secret:
                    $ref: '#/components/schemas/Secret'
        Role:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                displayName:
                    type: string
                description:
                    type: string
                default:
                    type: boolean
        RoleAssignment:
            type: object
            properties:
                group_id:
                    type: string
                role_id:
                    type: string
        RoleAssignments:
            type: object
            properties:
                assignments:
                    type: array
                    items:
                        $ref: '#/components/schemas/RoleAssignment'
        SAMLConnectionConfigRequest:
            type: object
            properties:
                idp_metadata_url:
                    type: string
                idp_entity_id:
                    type: string
                idp_sso_url:
                    type: string
                idp_certificate:
                    type: string
                idp_slo_url:
                    type: string
                ui_button_title:
                    type: string
                idp_name_id_format:
                    type: integer
                    format: enum
                idp_sso_request_binding:
                    type: integer
                    format: enum
                idp_slo_request_binding:
                    type: integer
                    format: enum
                saml_signing_option:
                    type: integer
                    format: enum
                force_authn:
                    type: boolean
                default_redirect_uri:
                    type: string
                assertion_encrypted:
                    type: boolean
                want_request_signed:
                    type: boolean
                certificate_id:
                    type: string
                idp_slo_required:
                    type: boolean
        SAMLConnectionConfigResponse:
            type: object
            properties:
                sp_entity_id:
                    type: string
                sp_assertion_url:
                    type: string
                sp_metadata_url:
                    type: string
                idp_metadata_url:
                    type: string
                idp_entity_id:
                    type: string
                idp_sso_url:
                    type: string
                idp_certificates:
                    type: array
                    items:
                        $ref: '#/components/schemas/IDPCertificate'
                idp_slo_url:
                    type: string
                ui_button_title:
                    type: string
                idp_name_id_format:
                    type: integer
                    format: enum
                idp_sso_request_binding:
                    type: integer
                    format: enum
                idp_slo_request_binding:
                    type: integer
                    format: enum
                saml_signing_option:
                    type: integer
                    format: enum
                allow_idp_initiated_login:
                    type: boolean
                force_authn:
                    type: boolean
                default_redirect_uri:
                    type: string
                assertion_encrypted:
                    type: boolean
                want_request_signed:
                    type: boolean
                certificate_id:
                    type: string
                idp_slo_required:
                    type: boolean
                sp_slo_url:
                    readOnly: true
                    type: string
        SMTPServerSettings:
            type: object
            properties:
                host:
                    type: string
                port:
                    type: string
                username:
                    type: string
                password:
                    writeOnly: true
                    type: string
                from_email:
                    type: string
                from_name:
                    type: string
        SSOUserAdditionInfo:
            type: object
            properties:
                default_saml_mapping:
                    type: string
                default_oidc_mapping:
                    type: string
        ScalekitEvent:
            type: object
            properties:
                spec_version:
                    type: string
                id:
                    type: string
                type:
                    type: string
                occurred_at:
                    type: string
                    format: date-time
                environment_id:
                    type: string
                organization_id:
                    type: string
                object:
                    type: integer
                    format: enum
                data:
                    type: object
        SearchOrganizationsResponse:
            type: object
            properties:
                next_page_token:
                    type: string
                total_size:
                    type: integer
                    format: uint32
                organizations:
                    type: array
                    items:
                        $ref: '#/components/schemas/Organization'
                prev_page_token:
                    type: string
        Secret:
            type: object
            properties:
                id:
                    type: string
                create_time:
                    type: string
                    format: date-time
                secret_suffix:
                    type: string
                status:
                    type: integer
                    format: enum
                expire_time:
                    type: string
                    format: date-time
                last_used_time:
                    type: string
                    format: date-time
                directory_id:
                    type: string
        SendCustomEventResponse:
            type: object
            properties:
                event_id:
                    type: string
        SendTestEventResponse:
            type: object
            properties:
                event_type:
                    type: string
                event_payload:
                    type: object
        SessionSettings:
            type: object
            properties:
                access_token_expiry:
                    type: integer
                    format: int32
                client_access_token_expiry:
                    type: integer
                    format: int32
                absolute_session_timeout:
                    type: integer
                    format: int32
                session_management_enabled:
                    type: boolean
                idle_session_timeout:
                    type: integer
                    format: int32
                idle_session_enabled:
                    type: boolean
                cookie_persistence_type:
                    type: integer
                    format: enum
                cookie_same_site_setting:
                    type: integer
                    format: enum
                cookie_custom_domain:
                    type: string
        Stats:
            type: object
            properties:
                total_users:
                    type: integer
                    format: int32
                total_groups:
                    type: integer
                    format: int32
                group_updated_at:
                    type: string
                    format: date-time
                user_updated_at:
                    type: string
                    format: date-time
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        Subscription:
            type: object
            properties:
                id:
                    type: string
                status:
                    type: string
        Template:
            type: object
            properties:
                updated_at:
                    readOnly: true
                    type: string
                    format: date-time
                id:
                    readOnly: true
                    type: string
                use_case:
                    type: integer
                    format: enum
                enabled:
                    type: boolean
                subject:
                    type: string
                html_content:
                    type: string
                plain_content:
                    type: string
                placeholders:
                    readOnly: true
                    type: array
                    items:
                        type: string
        ToggleConnectionResponse:
            type: object
            properties:
                enabled:
                    type: boolean
                error_message:
                    type: string
        ToggleDirectoryResponse:
            type: object
            properties:
                enabled:
                    type: boolean
                error_message:
                    type: string
        UpdateAttributesResponse:
            type: object
            properties:
                attribute_mappings:
                    $ref: '#/components/schemas/AttributeMappings'
        UpdateClient:
            type: object
            properties:
                redirect_uris:
                    type: array
                    items:
                        type: string
                default_redirect_uri:
                    type: string
                back_channel_logout_uri:
                    type: string
                post_logout_redirect_uris:
                    type: array
                    items:
                        type: string
                initiate_login_uri:
                    type: string
        UpdateClientResponse:
            type: object
            properties:
                client:
                    $ref: '#/components/schemas/Client'
        UpdateClientSecret:
            type: object
            properties:
                status:
                    type: integer
                    format: enum
        UpdateClientSecretResponse:
            type: object
            properties:
                secret:
                    $ref: '#/components/schemas/ClientSecret'
        UpdateConnection:
            type: object
            properties:
                provider:
                    type: integer
                    format: enum
                type:
                    type: integer
                    format: enum
                debug_enabled:
                    type: boolean
                ui_button_title:
                    type: string
                configuration_type:
                    type: integer
                    format: enum
                attribute_mapping:
                    type: object
                    additionalProperties:
                        type: string
                oidc_config:
                    $ref: '#/components/schemas/OIDCConnectionConfig'
                saml_config:
                    $ref: '#/components/schemas/SAMLConnectionConfigRequest'
                oauth_config:
                    $ref: '#/components/schemas/OAuthConnectionConfig'
                passwordless_config:
                    $ref: '#/components/schemas/PasswordLessConfig'
                key_id:
                    type: string
        UpdateConnectionResponse:
            type: object
            properties:
                connection:
                    $ref: '#/components/schemas/Connection'
        UpdateDirectory:
            type: object
            properties:
                name:
                    type: string
                directory_type:
                    type: integer
                    format: enum
                enabled:
                    type: boolean
                directory_provider:
                    type: integer
                    format: enum
                status:
                    type: integer
                    format: enum
                mappings:
                    type: array
                    items:
                        $ref: '#/components/schemas/DirectoryMapping'
        UpdateDirectoryResponse:
            type: object
            properties:
                directory:
                    $ref: '#/components/schemas/Directory'
        UpdateDomain:
            type: object
            properties: {}
        UpdateDomainResponse:
            type: object
            properties:
                domain:
                    $ref: '#/components/schemas/Domain'
        UpdateEnvironment:
            type: object
            properties:
                display_name:
                    type: string
        UpdateEnvironmentDomain:
            type: object
            properties:
                domain:
                    type: string
        UpdateEnvironmentResponse:
            type: object
            properties:
                environment:
                    $ref: '#/components/schemas/Environment'
        UpdateEnvironmentSessionSettingsResponse:
            type: object
            properties:
                environment_id:
                    type: string
                session_settings:
                    $ref: '#/components/schemas/SessionSettings'
        UpdateMember:
            type: object
            properties:
                role:
                    type: integer
                    format: enum
                first_name:
                    type: string
                last_name:
                    type: string
                metadata:
                    type: object
                    additionalProperties:
                        type: string
                user_profile:
                    $ref: '#/components/schemas/UserProfile'
        UpdateMemberResponse:
            type: object
            properties:
                member:
                    $ref: '#/components/schemas/Member'
        UpdateOrganization:
            type: object
            properties:
                display_name:
                    type: string
                external_id:
                    type: string
                metadata:
                    type: object
                    additionalProperties:
                        type: string
            description: For update messages ensure the indexes are same as the base model itself.
        UpdateOrganizationResponse:
            type: object
            properties:
                organization:
                    $ref: '#/components/schemas/Organization'
        UpdateOrganizationSessionSettingsResponse:
            type: object
            properties:
                environment_id:
                    type: string
                organization_id:
                    type: string
                session_settings:
                    $ref: '#/components/schemas/OrganizationSessionSettings'
        UpdatePortalCustomizationResponse:
            type: object
            properties:
                environmentId:
                    type: string
                customization_settings:
                    type: object
        UpdateRole:
            type: object
            properties:
                display_name:
                    type: string
                description:
                    type: string
                default:
                    type: boolean
        UpdateRoleResponse:
            type: object
            properties:
                role:
                    $ref: '#/components/schemas/Role'
        UpdateTemplate:
            type: object
            properties:
                subject:
                    type: string
                html_content:
                    type: string
                plain_content:
                    type: string
        UpdateUser:
            type: object
            properties:
                external_id:
                    type: string
                metadata:
                    type: object
                    additionalProperties:
                        type: string
                user_profile:
                    $ref: '#/components/schemas/UserProfile'
        UpdateUserAttributeResponse:
            type: object
            properties:
                user_attribute:
                    $ref: '#/components/schemas/UserAttribute'
        UpdateUserResponse:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/User'
        UpdateWorkspace:
            type: object
            properties:
                display_name:
                    type: string
        UpdateWorkspaceResponse:
            type: object
            properties:
                workspace:
                    $ref: '#/components/schemas/Workspace'
        User:
            type: object
            properties:
                id:
                    type: string
                environment_id:
                    readOnly: true
                    type: string
                create_time:
                    type: string
                    format: date-time
                update_time:
                    type: string
                    format: date-time
                email:
                    type: string
                external_id:
                    type: string
                identity:
                    type: string
                phone_number:
                    type: string
                organizations:
                    readOnly: true
                    type: array
                    items:
                        $ref: '#/components/schemas/OrganizationMembership'
                user_profile:
                    $ref: '#/components/schemas/UserProfile'
                metadata:
                    type: object
                    additionalProperties:
                        type: string
                last_login:
                    type: string
                    format: date-time
        UserAttribute:
            type: object
            properties:
                key:
                    type: string
                enabled:
                    type: boolean
                required:
                    type: boolean
                label:
                    type: string
                datatype:
                    type: integer
                    format: enum
                category:
                    readOnly: true
                    type: integer
                    format: enum
                sso_addition_info:
                    $ref: '#/components/schemas/SSOUserAdditionInfo'
                directory_user_additional_info:
                    $ref: '#/components/schemas/DirectoryUserAdditionalInfo'
        UserProfile:
            type: object
            properties:
                id:
                    readOnly: true
                    type: string
                first_name:
                    type: string
                last_name:
                    type: string
                name:
                    type: string
                locale:
                    type: string
                email_verified:
                    readOnly: true
                    type: boolean
                metadata:
                    type: object
                    additionalProperties:
                        type: string
                custom_attributes:
                    type: object
                    additionalProperties:
                        type: string
        Workspace:
            type: object
            properties:
                id:
                    type: string
                create_time:
                    type: string
                    format: date-time
                update_time:
                    type: string
                    format: date-time
                display_name:
                    type: string
                region_code:
                    type: integer
                    format: enum
tags:
    - name: AuthService
    - name: ClientService
    - name: ConnectionService
    - name: DirectoryService
    - name: DomainService
    - name: EmailService
    - name: EnvironmentService
    - name: EventsService
    - name: MembersService
    - name: MigrationService
    - name: OrganizationService
    - name: RolesService
    - name: UserAttributeService
    - name: UserService
    - name: WebhookService
    - name: WorkspaceService
