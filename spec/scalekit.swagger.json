{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "# Introduction\n\nScalekit API is (mostly) RESTful API. So you can use any HTTP client to make requests to the API.\n\nTo gain access to the Scalekit API, create an account on the [Scalekit Dashboard](https://app.scalekit.com). Once you've completed the signup process and acknowledged our terms, get a _environment_, _client_id_ and _client_secret_ from the [Dashboard](https://app.scalekit.com).\n\n- The Scalekit API is served over HTTPS TLS v1.2+ to ensure data privacy.\n- See the [Error reference](/reference/errors) in case of errors.\n\n#### API host\n\n```\nhttps://{environment}.scalekit.dev (Development)\nhttps://{environment}.scalekit.com (Production)\n```\n\nScalekit has two environments: Sandbox and Production. Items cannot be moved between environments.\n\n#### API Access\n\nScalekit API uses [OAuth 2.0 Client Credentials](https://www.oauth.com/oauth2-servers/access-tokens/client-credentials) based authentication.\n\nYou can obtain a secure token by making POST call to the `https://{ENV_URL}/oauth/token` endpoint and sending client_id and client_secret as part of the request body.\n\n```shell\ncurl https://{ENV_URL}/oauth/token \\\n -X POST \\\n -H 'Content-Type: application/x-www-form-urlencoded' \\\n -d 'client_id={client_id}' \\\n -d 'client_secret={client_secret}' \\\n -d 'grant_type=client_credentials'\\\n```\n\nOn success, you'll receive a response with an `access_token` and `refresh_token`.\n\n```json\n{\n\t\"access_token\": \"DCRD10-e7c5c8139165228a82e442445fe01c16\",\n\t\"token_type\": \"bearer\",\n\t\"expires_in\": 1799\n}\n```\n\nThe access_token is the OAuth access token you need to use for all subsequent API calls to Scalekit.\n\nTo make a request to one of our APIs, you need to include the access token in the Authorization header of the request as Bearer 'access_token' like the following example shows:\n\n```shell\n$ curl --request GET \"https://{ENV_URL}/api/v1/organizations\" \\\n-H \"Content-Type: application/json\" \\\n-H \"Authorization: Bearer {access_token}\"\n```\n\nOur SDKs will automatically handle the API authentication and error handling to make the job of using our APIs much easier for you. See the [SDKs](/docs/sdks) section for more information.\n\n# Error Handling\n\nOur APIs use standard HTTP status codes:\n\n- 200/201: Success\n- 400: Invalid request\n- 401: Authentication error\n- 404: Resource not found\n- 429: Rate limit exceeded\n- 500/501/504: Server error\n\nError responses include detailed messages, for example:\n\n```json\n{\n\t\"code\": 16,\n\t\"message\": \"Token empty\",\n\t\"details\": [\n\t\t{\n\t\t\t\"@type\": \"type.googleapis.com/scalekit.v1.errdetails.ErrorInfo\",\n\t\t\t\"error_code\": \"UNAUTHENTICATED\"\n\t\t}\n\t]\n}\n```\n",
    "title": "Scalekit APIs",
    "contact": {
      "name": "Scalekit Inc",
      "url": "https://scalekit.com",
      "email": "support@scalekit.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    },
    "version": "1.0.0"
  },
  "host": "$ENV_URL",
  "paths": {
    "/api/v1/clients/{client_id}": {
      "get": {
        "description": "Retrieves client configuration details including authentication settings, redirect URIs, and security parameters. Includes current values for `redirect_uri`, `post_logout_redirect_uri`, and `backchannel_logout_uri`",
        "tags": [
          "Client Configs"
        ],
        "summary": "Get Client Configuration",
        "operationId": "ClientService_GetClient",
        "parameters": [
          {
            "type": "string",
            "description": "Unique identifier of the client application to retrieve. Must start with 'skc_' and be 1-32 characters long",
            "name": "client_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Client configuration retrieved successfully. Returns full client metadata and security settings",
            "schema": {
              "$ref": "#/definitions/clientsGetClientResponse"
            }
          }
        }
      },
      "put": {
        "description": "Replaces the entire client configuration with the provided values. Required fields: redirect_uris, default_redirect_uri. Immutable fields: id, create_time",
        "tags": [
          "Client Configs"
        ],
        "summary": "Update Client Configuration",
        "operationId": "ClientService_UpdateClient",
        "parameters": [
          {
            "type": "string",
            "description": "Unique identifier for your client application. Find this in Settings \u003e API Credentials",
            "name": "client_id",
            "in": "path",
            "required": true
          },
          {
            "name": "client",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1clientsUpdateClient"
            }
          },
          {
            "type": "string",
            "name": "mask",
            "in": "query"
          }
        ],
        "responses": {
          "201": {
            "description": "Client configuration updated successfully. Returns the updated client resource with new update_time",
            "schema": {
              "$ref": "#/definitions/clientsUpdateClientResponse"
            }
          }
        }
      }
    },
    "/api/v1/connections": {
      "get": {
        "description": "Retrieves a list of connections in the environment",
        "tags": [
          "Connection"
        ],
        "summary": "List Connections",
        "operationId": "ConnectionService_ListConnections",
        "parameters": [
          {
            "type": "string",
            "description": "Filter connections by organization identifier",
            "name": "organization_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Filter connections by email domain associated with the organization",
            "name": "domain",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Comma-separated list of additional fields to include in the response",
            "name": "include",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved connections",
            "schema": {
              "$ref": "#/definitions/connectionsListConnectionsResponse"
            }
          }
        }
      }
    },
    "/api/v1/organizations": {
      "get": {
        "description": "Retrieve a paginated list of organizations within your environment. The response includes a `page_token` that can be used to access subsequent pages of results.",
        "tags": [
          "Organizations"
        ],
        "summary": "List Organizations",
        "externalDocs": {
          "description": "Learn more about organization listing",
          "url": "https://docs.scalekit.com/"
        },
        "operationId": "OrganizationService_ListOrganization",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "Maximum number of organizations to return per page. Must be between 10 and 100",
            "name": "page_size",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Pagination token from the previous response. Use to retrieve the next page of organizations",
            "name": "page_token",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Your application's unique identifier for this organization, used to link Scalekit with your system",
            "name": "external_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of organizations",
            "schema": {
              "$ref": "#/definitions/organizationsListOrganizationsResponse"
            }
          },
          "400": {
            "description": "Invalid page token",
            "schema": {}
          }
        }
      },
      "post": {
        "description": "Creates a new organization in your environment. Use this endpoint to add a new tenant that can be configured with various settings and metadata",
        "tags": [
          "Organizations"
        ],
        "summary": "Create an Organization",
        "operationId": "OrganizationService_CreateOrganization",
        "parameters": [
          {
            "description": "Organization details",
            "name": "organization",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Required parameters for creating a new organization",
              "$ref": "#/definitions/v1organizationsCreateOrganization"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returns the newly created organization with its unique identifier and settings",
            "schema": {
              "$ref": "#/definitions/organizationsCreateOrganizationResponse"
            }
          }
        }
      }
    },
    "/api/v1/organizations/{id}": {
      "get": {
        "description": "Retrieves organization details by Scalekit ID, including name, region, metadata, and settings",
        "tags": [
          "Organizations"
        ],
        "summary": "Get Organization details",
        "operationId": "OrganizationService_GetOrganization",
        "parameters": [
          {
            "type": "string",
            "description": "Unique scalekit-generated identifier that uniquely references an organization",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the complete organization object with ID, display name, settings, and metadata",
            "schema": {
              "$ref": "#/definitions/organizationsGetOrganizationResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Remove an existing organization from the environment using its unique identifier",
        "tags": [
          "Organizations"
        ],
        "summary": "Delete an Organization",
        "operationId": "OrganizationService_DeleteOrganization",
        "parameters": [
          {
            "type": "string",
            "description": "Unique scalekit-generated identifier that uniquely references an organization",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Organization successfully deleted and no longer accessible",
            "schema": {}
          }
        }
      },
      "patch": {
        "description": "Updates an organization's display name, external ID, or metadata. Requires a valid organization identifier. Region code cannot be modified through this endpoint.",
        "tags": [
          "Organizations"
        ],
        "summary": "Update Organization details",
        "operationId": "OrganizationService_UpdateOrganization",
        "parameters": [
          {
            "type": "string",
            "description": "Unique identifier of the organization to be updated",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "organization",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Organization Parameters to be updated",
              "$ref": "#/definitions/v1organizationsUpdateOrganization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the updated organization with all current details reflected in the response.",
            "schema": {
              "$ref": "#/definitions/organizationsUpdateOrganizationResponse"
            }
          }
        }
      }
    },
    "/api/v1/organizations/{id}/portal_links": {
      "put": {
        "description": "Creates a time-limited Admin Portal URL for IT administrators to configure and manage Single Sign-On (SSO) connections within their organization. Generated links expire after 7 days (168 hours).",
        "tags": [
          "Organizations"
        ],
        "summary": "Generate Admin Portal Link",
        "operationId": "OrganizationService_GeneratePortalLink",
        "parameters": [
          {
            "type": "string",
            "description": "Organization ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "array",
            "items": {
              "enum": [
                "dir_sync",
                "sso"
              ],
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Features to enable in the admin portal link. To enable features, append them as URL parameters:\n\n- Single Sign-On: ?features=sso\n- Directory Sync: ?features=dir_sync\n- Both features: ?features=sso\u0026features=dir_sync\n\nExample URL: https://scalekit.com/portal/lnk_123?features=sso\n\n - dir_sync: dir_sync enables directory synchronization configuration in the portal\n - sso: sso enables Single Sign-On (SSO) configuration in the portal",
            "name": "features",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Admin Portal link generated successfully. Returns the portal URL and expiration timestamp.",
            "schema": {
              "$ref": "#/definitions/organizationsGeneratePortalLinkResponse"
            }
          }
        }
      }
    },
    "/api/v1/organizations/{id}/settings": {
      "patch": {
        "description": "Updates configuration settings for an organization. Supports modifying SSO configuration, directory synchronization settings, and session parameters. Requires organization ID and the specific settings to update.",
        "tags": [
          "Organizations"
        ],
        "summary": "Toggle Organization settings",
        "operationId": "OrganizationService_UpdateOrganizationSettings",
        "parameters": [
          {
            "type": "string",
            "description": "Unique identifier of the organization to update settings. Must begin with 'org_' prefix",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "settings",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Settings configuration to apply to the organization. Contains feature toggles for SSO, directory synchronization, and other organization capabilities",
              "$ref": "#/definitions/organizationsOrganizationSettings",
              "example": {
                "features": [
                  {
                    "enabled": true,
                    "name": "sso"
                  },
                  {
                    "enabled": false,
                    "name": "directory_sync"
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the complete organization object with updated settings applied. Contains all organization details including ID, display name, and the modified settings.",
            "schema": {
              "$ref": "#/definitions/organizationsGetOrganizationResponse"
            }
          },
          "400": {
            "description": "Invalid request - occurs when the settings payload contains invalid values or unsupported configuration",
            "schema": {}
          },
          "404": {
            "description": "Organization not found - the specified organization ID doesn't exist",
            "schema": {}
          }
        }
      }
    },
    "/api/v1/organizations/{organization_id}/connections/{id}": {
      "get": {
        "description": "Retrieves the complete configuration and status details for a specific connection by its ID within an organization. Returns all connection properties including provider settings, protocols, and current status.",
        "tags": [
          "Connection"
        ],
        "summary": "Get Connection details",
        "operationId": "ConnectionService_GetConnection",
        "parameters": [
          {
            "type": "string",
            "description": "Organization identifier (required). Specifies which organization owns the connection you want to retrieve.",
            "name": "organization_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Connection identifier (required). Specifies which specific connection to retrieve from the organization.",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved connection details for the specified organization",
            "schema": {
              "$ref": "#/definitions/connectionsGetConnectionResponse"
            }
          }
        }
      }
    },
    "/api/v1/organizations/{organization_id}/connections/{id}:disable": {
      "patch": {
        "description": "Deactivate an existing connection for the specified organization. When disabled, users cannot authenticate using this connection. This endpoint changes the connection state from enabled to disabled without modifying other configuration settings",
        "tags": [
          "Connection"
        ],
        "summary": "Disable Organization Connection",
        "operationId": "ConnectionService_DisableConnection",
        "parameters": [
          {
            "type": "string",
            "description": "Unique identifier of the organization associated with the connection",
            "name": "organization_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique identifier for the connection to be toggled",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Connection disabled successfully",
            "schema": {
              "$ref": "#/definitions/connectionsToggleConnectionResponse"
            }
          }
        }
      }
    },
    "/api/v1/organizations/{organization_id}/connections/{id}:enable": {
      "patch": {
        "description": "Activate an existing connection for the specified organization. When enabled, users can authenticate using this connection. This endpoint changes the connection state from disabled to enabled without modifying other configuration settings",
        "tags": [
          "Connection"
        ],
        "summary": "Enable Organization Connection",
        "operationId": "ConnectionService_EnableConnection",
        "parameters": [
          {
            "type": "string",
            "description": "Unique identifier of the organization associated with the connection",
            "name": "organization_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique identifier for the connection to be toggled",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Connection enabled successfully",
            "schema": {
              "$ref": "#/definitions/connectionsToggleConnectionResponse"
            }
          }
        }
      }
    },
    "/api/v1/organizations/{organization_id}/directories": {
      "get": {
        "tags": [
          "Directory"
        ],
        "summary": "List Organization Directories",
        "operationId": "DirectoryService_ListDirectories",
        "parameters": [
          {
            "type": "string",
            "description": "Unique identifier of the organization",
            "name": "organization_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of directories for the organization",
            "schema": {
              "$ref": "#/definitions/directoriesListDirectoriesResponse"
            }
          }
        }
      }
    },
    "/api/v1/organizations/{organization_id}/directories/{directory_id}/groups": {
      "get": {
        "description": "Retrieves all groups from a specified directory. Use this endpoint to view group structures from your connected identity provider.",
        "tags": [
          "Directory"
        ],
        "summary": "List Directory Groups",
        "operationId": "DirectoryService_ListDirectoryGroups",
        "parameters": [
          {
            "type": "string",
            "description": "Unique identifier of the organization",
            "name": "organization_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique identifier of the directory",
            "name": "directory_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "Number of groups to return per page. Maximum value is 30. If not specified, defaults to 10",
            "name": "page_size",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Token for pagination. Use the value returned in the 'next_page_token' field of the previous response",
            "name": "page_token",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "Filter groups updated after this timestamp. Use ISO 8601 format",
            "name": "updated_after",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "If true, includes full group details. If false or not specified, returns basic information only",
            "name": "include_detail",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of groups from the specified directory",
            "schema": {
              "$ref": "#/definitions/directoriesListDirectoryGroupsResponse"
            }
          }
        }
      }
    },
    "/api/v1/organizations/{organization_id}/directories/{directory_id}/users": {
      "get": {
        "description": "Retrieves a list of all users within a specified directory for an organization. This endpoint allows you to view user accounts associated with your connected Directory Providers.",
        "tags": [
          "Directory"
        ],
        "summary": "List Directory Users",
        "operationId": "DirectoryService_ListDirectoryUsers",
        "parameters": [
          {
            "type": "string",
            "description": "Unique identifier of the organization",
            "name": "organization_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique identifier of the directory within the organization",
            "name": "directory_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "Number of users to return per page. Maximum value is 30. If not specified, defaults to 10",
            "name": "page_size",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Token for pagination. Use the value returned in the 'next_page_token' field of the previous response to retrieve the next page of results",
            "name": "page_token",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "If set to true, the response will include the full user payload with all available details. If false or not specified, only essential user information will be returned",
            "name": "include_detail",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Filter users by their membership in a specific directory group",
            "name": "directory_group_id",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "Filter users that were updated after the specified timestamp. Use ISO 8601 format",
            "name": "updated_after",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of users from the specified directory",
            "schema": {
              "$ref": "#/definitions/directoriesListDirectoryUsersResponse"
            }
          }
        }
      }
    },
    "/api/v1/organizations/{organization_id}/directories/{id}": {
      "get": {
        "description": "Retrieves detailed information about a specific directory within an organization",
        "tags": [
          "Directory"
        ],
        "summary": "Get Directory details",
        "operationId": "DirectoryService_GetDirectory",
        "parameters": [
          {
            "type": "string",
            "description": "Unique identifier of the organization",
            "name": "organization_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Unique identifier of the directory",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved directory details",
            "schema": {
              "$ref": "#/definitions/directoriesGetDirectoryResponse"
            }
          }
        }
      }
    },
    "/api/v1/organizations/{organization_id}/directories/{id}:disable": {
      "patch": {
        "description": "Stops synchronization of users and groups from a specified directory within an organization. This operation prevents further updates from the connected Directory provider",
        "tags": [
          "Directory"
        ],
        "summary": "Disable a Directory",
        "operationId": "DirectoryService_DisableDirectory",
        "parameters": [
          {
            "type": "string",
            "description": "A unique identifier for the organization. The value must begin with 'org_' and be between 1 and 32 characters long",
            "name": "organization_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "A unique identifier for a directory within the organization. The value must begin with 'dir_' and be between 1 and 32 characters long",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully disabled the directory",
            "schema": {
              "$ref": "#/definitions/directoriesToggleDirectoryResponse"
            }
          }
        }
      }
    },
    "/api/v1/organizations/{organization_id}/directories/{id}:enable": {
      "patch": {
        "description": "Activates a directory within an organization, allowing it to synchronize users and groups with the connected Directory provider",
        "tags": [
          "Directory"
        ],
        "summary": "Enable a Directory",
        "operationId": "DirectoryService_EnableDirectory",
        "parameters": [
          {
            "type": "string",
            "description": "A unique identifier for the organization. The value must begin with 'org_' and be between 1 and 32 characters long",
            "name": "organization_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "A unique identifier for a directory within the organization. The value must begin with 'dir_' and be between 1 and 32 characters long",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/directoriesToggleDirectoryResponse"
            }
          }
        }
      }
    },
    "/api/v1/organizations/{organization_id}/users": {
      "get": {
        "description": "Retrieve a paginated list of all users within the specified organization. Use the 'page_token' from the response to access subsequent pages of results",
        "tags": [
          "Users"
        ],
        "summary": "List Organization Users",
        "operationId": "UserService_ListUsers",
        "parameters": [
          {
            "type": "string",
            "description": "Unique identifier of the organization for which to list users. Must start with 'org_' and be 1-32 characters long.",
            "name": "organization_id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "Maximum number of users to return in a single response. Valid range: 1-100. Server may return fewer users than specified.",
            "name": "page_size",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Pagination token from a previous ListUserResponse. Used to retrieve the next page of results. Leave empty for the first request.",
            "name": "page_token",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of users in the organization",
            "schema": {
              "$ref": "#/definitions/usersListUserResponse"
            }
          }
        }
      },
      "post": {
        "description": "Creates a new user account within an organization. Required fields include email and username. Optional fields include phone_number and groups. The user receives an activation email unless this feature is disabled in the organization settings",
        "tags": [
          "Users"
        ],
        "summary": "Create Organization User",
        "operationId": "UserService_CreateUser",
        "parameters": [
          {
            "type": "string",
            "name": "organization_id",
            "in": "path",
            "required": true
          },
          {
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/usersUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created successfully. Returns the created user object, including system-generated identifiers and timestamps",
            "schema": {
              "$ref": "#/definitions/usersCreateUserResponse"
            }
          }
        }
      }
    },
    "/api/v1/organizations/{organization_id}/users/{id}": {
      "get": {
        "description": "Retrieves complete user details using one of: system-generated ID, external ID, or identity provider ID. Includes organization memberships, and metadata",
        "tags": [
          "Users"
        ],
        "summary": "Get Organization User",
        "operationId": "UserService_GetUser",
        "parameters": [
          {
            "type": "string",
            "description": "Unique organization identifier. Required and must start with 'org_' (1-32 characters).",
            "name": "organization_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "System-generated user ID. Must start with 'usr_' (19-25 characters).",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Your application's unique identifier for this organization, used to link Scalekit with your system.",
            "name": "external_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Immutable identity provider value from authentication systems.",
            "name": "identity",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "User details retrieved successfully. Returns full user object with system-generated fields and timestamps.",
            "schema": {
              "$ref": "#/definitions/usersGetUserResponse"
            }
          }
        }
      },
      "post": {
        "description": "Associates an existing user with an organization. The user must already exist in the system and be identified by their unique ID, external ID, or identity provider ID",
        "tags": [
          "Users"
        ],
        "summary": "Add User to Organization",
        "operationId": "UserService_AddUserToOrganization",
        "parameters": [
          {
            "type": "string",
            "description": "Unique identifier of the target organization. Must start with 'org_' and be 1-32 characters long.",
            "name": "organization_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "System-generated user ID. Must start with 'usr_' (19-25 characters)",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "External system identifier from connected directories. Must be unique across the system",
            "name": "external_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Immutable identity provider value from authentication systems",
            "name": "identity",
            "in": "query"
          }
        ],
        "responses": {
          "201": {
            "description": "User successfully added to the organization. Returns details of the updated user membership",
            "schema": {
              "$ref": "#/definitions/usersAddUserResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Permanently removes a user from the organization using one of: system-generated ID, external ID, or identity provider ID. This action is irreversible and may cascade to related resources like group memberships.",
        "tags": [
          "Users"
        ],
        "summary": "Delete User",
        "operationId": "UserService_DeleteUser",
        "parameters": [
          {
            "type": "string",
            "description": "Unique organization identifier. Must start with 'org_' and be 1-32 characters long",
            "name": "organization_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "System-generated user ID. Must start with 'usr_' (19-25 characters)",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "External system identifier from connected directories. Must match existing records",
            "name": "external_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Immutable identity provider value from authentication systems",
            "name": "identity",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully marked for deletion. No content returned",
            "schema": {}
          }
        }
      },
      "patch": {
        "description": "Performs partial updates to a user's configuration. Updatable fields: email, phone_number, user_profile, metadata. Immutable fields: id, environment_id, create_time. Returns the updated user resource.",
        "tags": [
          "Users"
        ],
        "summary": "Update Organization User",
        "operationId": "UserService_UpdateUser",
        "parameters": [
          {
            "type": "string",
            "description": "Unique identifier of the organization containing the user. Must start with 'org_' and be 1-32 characters long.",
            "name": "organization_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "System-generated user ID. Must start with 'usr_' and be 19-25 characters long.",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "description": "User fields to update. Only specified fields will be modified. Required fields must be provided if being changed.",
              "$ref": "#/definitions/v1usersUpdateUser",
              "example": {
                "email": "new.email@example.com",
                "phone_number": "+14155552671"
              }
            }
          },
          {
            "type": "string",
            "description": "Your application's unique identifier for this organization, used to link Scalekit with your system.",
            "name": "external_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Immutable identity provider identifier. Must match the exact value returned by the IDP.",
            "name": "identity",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully. Returns the modified user object with updated timestamps.",
            "schema": {
              "$ref": "#/definitions/usersUpdateUserResponse"
            }
          }
        }
      }
    },
    "/api/v1/organizations:search": {
      "get": {
        "description": "Searches for organizations in your environment using a query string. The query matches against organization name, ID, or external ID. Returns multiple results when more than one organization matches the criteria.",
        "tags": [
          "Organizations"
        ],
        "summary": "Search Organizations",
        "operationId": "OrganizationService_SearchOrganization",
        "parameters": [
          {
            "type": "string",
            "description": "Search term to match against organization names, IDs, or external IDs. Must be at least 3 characters. Case insensitive.",
            "name": "query",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "Maximum number of organizations to return per page. Value must be between 1 and 30.",
            "name": "page_size",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Token from a previous response for pagination. Provide this to retrieve the next page of results.",
            "name": "page_token",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of matching organizations and a page token for pagination if there are additional results.",
            "schema": {
              "$ref": "#/definitions/organizationsSearchOrganizationsResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "clientsClient": {
      "type": "object",
      "properties": {
        "back_channel_logout_uri": {
          "description": "HTTPS endpoint for receiving back-channel logout requests. Required for RP-initiated logout flows",
          "type": "string",
          "example": "https://auth.your-app.com/backchannel-logout"
        },
        "create_time": {
          "description": "Timestamp indicating when the client configuration was initially created. Automatically set by the server.",
          "type": "string",
          "format": "date-time"
        },
        "default_redirect_uri": {
          "description": "Primary redirect URI used when none is specified in authorization requests. Must match one of redirect_uris.",
          "type": "string",
          "example": "https://auth.your-app.com/callback"
        },
        "id": {
          "description": "Unique identifier for the client application. Automatically generated upon creation and immutable.",
          "type": "string",
          "example": "skc_1234abcd5678efgh"
        },
        "initiate_login_uri": {
          "description": "Pre-configured URI for initiating login flows. Must use the https scheme and contain valid domain",
          "type": "string",
          "example": "https://auth.your-app.com/initiate-auth"
        },
        "keyId": {
          "description": "Identifier for the authentication key pair used to sign tokens. Rotate keys by generating new secrets.",
          "type": "string",
          "example": "key_9876zyxw5432vuts"
        },
        "post_logout_redirect_uris": {
          "description": "Allowed URIs for post-logout redirection. Must use HTTPS and conform to OpenID Connect Session Management spec",
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "https://auth.your-app.com/logout"
          ]
        },
        "redirect_uris": {
          "description": "Allowed redirect URIs for OAuth 2.0 flows. Must use HTTPS protocol in production environment and comply with RFC 6749.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "https://auth.your-app.com/callback",
            "https://scalekit.example.org/auth"
          ]
        },
        "secrets": {
          "description": "Hashed client secrets for authentication. Secrets are stored using bcrypt and displayed only during initial creation.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/clientsClientSecret"
          }
        },
        "update_time": {
          "description": "Timestamp of the last modification to the client configuration. Automatically updated by the server.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "clientsClientSecret": {
      "type": "object",
      "properties": {
        "create_time": {
          "type": "string",
          "format": "date-time"
        },
        "created_by": {
          "type": "string"
        },
        "expire_time": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string"
        },
        "last_used_time": {
          "type": "string",
          "format": "date-time"
        },
        "plain_secret": {
          "type": "string"
        },
        "secret_suffix": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/clientsClientSecretStatus"
        },
        "update_time": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "clientsClientSecretStatus": {
      "type": "string",
      "enum": [
        "INACTIVE"
      ]
    },
    "clientsGetClientResponse": {
      "type": "object",
      "properties": {
        "client": {
          "$ref": "#/definitions/clientsClient"
        }
      }
    },
    "clientsUpdateClientResponse": {
      "type": "object",
      "properties": {
        "client": {
          "$ref": "#/definitions/clientsClient"
        }
      }
    },
    "commonsIdentityProviderType": {
      "type": "string",
      "enum": [
        "OKTA",
        "GOOGLE",
        "MICROSOFT_AD",
        "AUTH0",
        "ONELOGIN",
        "PING_IDENTITY",
        "JUMPCLOUD",
        "CUSTOM",
        "GITHUB",
        "GITLAB",
        "LINKEDIN",
        "SALESFORCE",
        "MICROSOFT",
        "IDP_SIMULATOR",
        "SCALEKIT"
      ]
    },
    "commonsMembershipRole": {
      "type": "string",
      "enum": [
        "ADMIN",
        "USER"
      ]
    },
    "commonsOrganizationMembership": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "membership_status": {
          "$ref": "#/definitions/commonsUserStatus"
        },
        "name": {
          "type": "string"
        },
        "primary_identity_provider": {
          "$ref": "#/definitions/commonsIdentityProviderType"
        },
        "role": {
          "$ref": "#/definitions/commonsMembershipRole"
        }
      }
    },
    "commonsRegionCode": {
      "type": "string",
      "enum": [
        "US",
        "EU"
      ]
    },
    "commonsUserProfile": {
      "type": "object",
      "properties": {
        "custom_attributes": {
          "description": "Custom attributes for extended user profile data. Keys (3-25 chars), values (1-256 chars).",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "example": {
            "department": "engineering",
            "security_clearance": "level2"
          }
        },
        "email_verified": {
          "description": "Indicates if the user's email address has been verified. Automatically updated by the system.",
          "type": "boolean",
          "readOnly": true,
          "example": true
        },
        "first_name": {
          "description": "User's given name. Maximum 200 characters.",
          "type": "string",
          "example": "John"
        },
        "id": {
          "description": "Unique system-generated identifier for the user profile. Immutable and read-only.",
          "type": "string",
          "readOnly": true,
          "example": "usr_profile_1234abcd5678efgh"
        },
        "last_name": {
          "description": "User's family name. Maximum 200 characters.",
          "type": "string",
          "example": "Doe"
        },
        "locale": {
          "description": "User's localization preference in BCP-47 format. Defaults to organization settings.",
          "type": "string",
          "example": "en-US"
        },
        "metadata": {
          "description": "System-managed key-value pairs for internal tracking. Keys (3-25 chars), values (1-256 chars).",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "example": {
            "account_status": "active",
            "signup_source": "mobile_app"
          }
        },
        "name": {
          "description": "Full name in display format. Typically combines first_name and last_name.",
          "type": "string",
          "example": "John Michael Doe"
        }
      }
    },
    "commonsUserStatus": {
      "type": "string",
      "enum": [
        "ACTIVE",
        "INACTIVE"
      ]
    },
    "connectionsConfigurationType": {
      "type": "string",
      "enum": [
        "DISCOVERY",
        "MANUAL"
      ]
    },
    "connectionsConnection": {
      "type": "object",
      "properties": {
        "attribute_mapping": {
          "description": "Maps identity provider attributes to user profile fields. For example, {'email': 'user.mail', 'name': 'user.displayName'}.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "configuration_type": {
          "description": "How the connection was configured: DISCOVERY (automatic configuration) or MANUAL (administrator configured)",
          "$ref": "#/definitions/connectionsConfigurationType",
          "example": "MANUAL"
        },
        "debug_enabled": {
          "description": "Enables testing mode that allows non-HTTPS endpoints. Should only be enabled in development environments, never in production.",
          "type": "boolean",
          "example": true
        },
        "enabled": {
          "description": "Controls whether users can sign in using this connection. When false, the connection exists but cannot be used for authentication.",
          "type": "boolean",
          "example": false
        },
        "id": {
          "description": "Unique identifier for this connection. Used in API calls to reference this specific connection.",
          "type": "string",
          "example": "conn_2123312131125533"
        },
        "key_id": {
          "description": "Alternative identifier for this connection, typically used in frontend applications or URLs.",
          "type": "string"
        },
        "oauth_config": {
          "description": "Configuration details for OAuth connections. Present only when type is OAUTH.",
          "$ref": "#/definitions/connectionsOAuthConnectionConfig"
        },
        "oidc_config": {
          "description": "Configuration details for OpenID Connect (OIDC) connections. Present only when type is OIDC.",
          "$ref": "#/definitions/connectionsOIDCConnectionConfig"
        },
        "organization_id": {
          "description": "Identifier of the organization that owns this connection. Connections are typically scoped to a single organization.",
          "type": "string",
          "example": "org_2123312131125533"
        },
        "passwordless_config": {
          "description": "Configuration details for Magic Link authentication. Present only when type is MAGIC_LINK.",
          "$ref": "#/definitions/connectionsPasswordLessConfig"
        },
        "provider": {
          "description": "Identity provider service that handles authentication (such as OKTA, Google, Azure AD, or a custom provider)",
          "$ref": "#/definitions/connectionsConnectionProvider",
          "example": "OKTA"
        },
        "saml_config": {
          "description": "Configuration details for SAML connections. Present only when type is SAML.",
          "$ref": "#/definitions/connectionsSAMLConnectionConfigResponse"
        },
        "status": {
          "description": "Current configuration status of the connection. Possible values include IN_PROGRESS, CONFIGURED, and ERROR.",
          "$ref": "#/definitions/connectionsConnectionStatus",
          "readOnly": true,
          "example": "IN_PROGRESS"
        },
        "test_connection_uri": {
          "description": "URI that can be used to test this connection. Visit this URL to verify the connection works correctly.",
          "type": "string",
          "example": "https://auth.example.com/test-connection/conn_2123312131125533"
        },
        "type": {
          "description": "Authentication protocol used by this connection. Can be OIDC (OpenID Connect), SAML, OAUTH, or MAGIC_LINK.",
          "$ref": "#/definitions/connectionsConnectionType",
          "example": "OIDC"
        }
      }
    },
    "connectionsConnectionProvider": {
      "type": "string",
      "enum": [
        "OKTA",
        "GOOGLE",
        "MICROSOFT_AD",
        "AUTH0",
        "ONELOGIN",
        "PING_IDENTITY",
        "JUMPCLOUD",
        "CUSTOM",
        "GITHUB",
        "GITLAB",
        "LINKEDIN",
        "SALESFORCE",
        "MICROSOFT",
        "IDP_SIMULATOR",
        "SCALEKIT"
      ]
    },
    "connectionsConnectionStatus": {
      "type": "string",
      "enum": [
        "DRAFT",
        "IN_PROGRESS",
        "COMPLETED"
      ]
    },
    "connectionsConnectionType": {
      "type": "string",
      "enum": [
        "OIDC",
        "SAML",
        "PASSWORD",
        "OAUTH",
        "PASSWORDLESS"
      ]
    },
    "connectionsGetConnectionResponse": {
      "type": "object",
      "properties": {
        "connection": {
          "description": "Complete connection details including provider configuration, protocol settings, status, and all metadata. Contains everything needed to understand the connection's current state.",
          "$ref": "#/definitions/connectionsConnection"
        }
      }
    },
    "connectionsIDPCertificate": {
      "type": "object",
      "properties": {
        "certificate": {
          "description": "IDP Certificate",
          "type": "string"
        },
        "create_time": {
          "description": "Certificate Creation Time",
          "type": "string",
          "format": "date-time",
          "example": "2021-09-01T00:00:00Z"
        },
        "expiry_time": {
          "description": "Certificate Expiry Time",
          "type": "string",
          "format": "date-time",
          "example": "2021-09-01T00:00:00Z"
        },
        "id": {
          "description": "Certificate ID",
          "type": "string",
          "example": "cert_123123123123"
        },
        "issuer": {
          "description": "Certificate Issuer",
          "type": "string",
          "example": "https://youridp.com/service/saml"
        }
      }
    },
    "connectionsListConnection": {
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Whether the connection is currently active for organization users",
          "type": "boolean",
          "example": false
        },
        "id": {
          "description": "Unique identifier of the connection",
          "type": "string",
          "example": "conn_2123312131125533"
        },
        "organization_id": {
          "description": "Unique identifier of the organization that owns this connection",
          "type": "string",
          "example": "org_2123312131125533"
        },
        "provider": {
          "description": "Identity provider type (e.g., OKTA, Google, Azure AD)",
          "$ref": "#/definitions/connectionsConnectionProvider",
          "example": "CUSTOM"
        },
        "status": {
          "description": "Current configuration status of the connection",
          "$ref": "#/definitions/connectionsConnectionStatus",
          "readOnly": true,
          "example": "IN_PROGRESS"
        },
        "type": {
          "description": "Authentication protocol used by the connection",
          "$ref": "#/definitions/connectionsConnectionType",
          "example": "OIDC"
        }
      }
    },
    "connectionsListConnectionsResponse": {
      "type": "object",
      "properties": {
        "connections": {
          "description": "List of connections matching the request criteria",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/connectionsListConnection"
          }
        }
      }
    },
    "connectionsNameIdFormat": {
      "type": "string",
      "enum": [
        "UNSPECIFIED",
        "EMAIL",
        "TRANSIENT",
        "PERSISTENT"
      ]
    },
    "connectionsOAuthConnectionConfig": {
      "type": "object",
      "properties": {
        "authorize_uri": {
          "description": "Authorize URI",
          "type": "string",
          "example": "https://youridp.com/service/oauth/authorize"
        },
        "client_id": {
          "description": "Client ID",
          "type": "string",
          "example": "oauth_client_id"
        },
        "client_secret": {
          "description": "Client Secret",
          "type": "string",
          "example": "oauth_client_secret"
        },
        "pkce_enabled": {
          "description": "PKCE Enabled",
          "type": "boolean",
          "example": true
        },
        "prompt": {
          "description": "Prompt for the user",
          "type": "string",
          "example": "none"
        },
        "redirect_uri": {
          "description": "Redirect URI",
          "type": "string",
          "example": "https://yourapp.com/service/oauth/redirect"
        },
        "scopes": {
          "description": "OIDC Scopes",
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "openid",
            "profile"
          ]
        },
        "token_uri": {
          "description": "Token URI",
          "type": "string",
          "example": "https://youridp.com/service/oauth/token"
        },
        "use_platform_creds": {
          "description": "Use Scalekit credentials",
          "type": "boolean",
          "example": true
        },
        "user_info_uri": {
          "description": "User Info URI",
          "type": "string",
          "example": "https://youridp.com/service/oauth/userinfo"
        }
      }
    },
    "connectionsOIDCConnectionConfig": {
      "type": "object",
      "properties": {
        "authorize_uri": {
          "description": "Authorize URI",
          "type": "string",
          "example": "https://youridp.com/service/oauth/authorize"
        },
        "backchannel_logout_redirect_uri": {
          "description": "backchannel logout redirect uri where idp sends logout_token",
          "type": "string",
          "readOnly": true,
          "example": "https://yourapp.com/sso/v1/oidc/conn_1234/backchannel-logout"
        },
        "client_id": {
          "description": "Client ID",
          "type": "string",
          "example": "oauth_client_id"
        },
        "client_secret": {
          "description": "Client Secret",
          "type": "string",
          "example": "oauth_client_secret"
        },
        "discovery_endpoint": {
          "description": "Discovery Endpoint",
          "type": "string",
          "example": "https://youridp.com/service/oauth/.well-known/openid-configuration"
        },
        "idp_logout_required": {
          "description": "Enable IDP logout",
          "type": "boolean",
          "example": true
        },
        "issuer": {
          "description": "Issuer URL",
          "type": "string",
          "example": "https://youridp.com/service/oauth"
        },
        "jwks_uri": {
          "description": "JWKS URI",
          "type": "string",
          "example": "https://youridp.com/service/oauth/jwks"
        },
        "pkce_enabled": {
          "description": "PKCE Enabled",
          "type": "boolean",
          "example": true
        },
        "post_logout_redirect_uri": {
          "description": "post logout redirect uri",
          "type": "string",
          "readOnly": true,
          "example": "https://yourapp.com/sso/v1/oidc/conn_1234/logout/callback"
        },
        "redirect_uri": {
          "description": "Redirect URI",
          "type": "string",
          "example": "https://yourapp.com/sso/v1/oidc/conn_1234/callback"
        },
        "scopes": {
          "description": "OIDC Scopes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/connectionsOIDCScope"
          },
          "example": [
            "openid",
            "profile"
          ]
        },
        "token_auth_type": {
          "description": "Token Auth Type",
          "$ref": "#/definitions/connectionsTokenAuthType",
          "example": "URL_PARAMS"
        },
        "token_uri": {
          "description": "Token URI",
          "type": "string",
          "example": "https://youridp.com/service/oauth/token"
        },
        "user_info_uri": {
          "description": "User Info URI",
          "type": "string",
          "example": "https://youridp.com/service/oauth/userinfo"
        }
      }
    },
    "connectionsOIDCScope": {
      "type": "string",
      "enum": [
        "openid",
        "profile",
        "email",
        "address",
        "phone"
      ]
    },
    "connectionsPasswordLessConfig": {
      "type": "object",
      "properties": {
        "frequency": {
          "description": "Link Frequency",
          "type": "integer",
          "format": "int32",
          "example": 1
        },
        "type": {
          "description": "Passwordless Type",
          "$ref": "#/definitions/connectionsPasswordlessType",
          "example": "LINK"
        },
        "validity": {
          "description": "Link Validity",
          "type": "string",
          "example": "24h"
        }
      }
    },
    "connectionsPasswordlessType": {
      "type": "string",
      "enum": [
        "LINK",
        "OTP",
        "LINK_OTP"
      ]
    },
    "connectionsRequestBinding": {
      "type": "string",
      "enum": [
        "HTTP_POST",
        "HTTP_REDIRECT"
      ]
    },
    "connectionsSAMLConnectionConfigResponse": {
      "type": "object",
      "properties": {
        "allow_idp_initiated_login": {
          "description": "Allow IDP Initiated Login",
          "type": "boolean",
          "example": true
        },
        "assertion_encrypted": {
          "description": "Assertion Encrypted",
          "type": "boolean",
          "example": true
        },
        "certificate_id": {
          "description": "Certificate ID",
          "type": "string",
          "example": "cer_35585423166144613"
        },
        "default_redirect_uri": {
          "description": "Default Redirect URI",
          "type": "string",
          "example": "https://yourapp.com/service/saml/redirect"
        },
        "force_authn": {
          "description": "Force Authn",
          "type": "boolean",
          "example": true
        },
        "idp_certificates": {
          "description": "IDP Certificates",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/connectionsIDPCertificate"
          }
        },
        "idp_entity_id": {
          "description": "IDP Entity ID",
          "type": "string",
          "example": "https://youridp.com/service/saml"
        },
        "idp_metadata_url": {
          "description": "IDP Metadata URL",
          "type": "string",
          "example": "https://youridp.com/service/saml/metadata"
        },
        "idp_name_id_format": {
          "description": "IDP Name ID Format",
          "$ref": "#/definitions/connectionsNameIdFormat",
          "example": "EMAIL"
        },
        "idp_slo_request_binding": {
          "description": "IDP SLO Request Binding",
          "$ref": "#/definitions/connectionsRequestBinding",
          "example": "HTTP_POST"
        },
        "idp_slo_required": {
          "description": "Enable IDP logout",
          "type": "boolean",
          "example": true
        },
        "idp_slo_url": {
          "description": "IDP SLO URL",
          "type": "string",
          "example": "https://youridp.com/service/saml/slo"
        },
        "idp_sso_request_binding": {
          "description": "IDP SSO Request Binding",
          "$ref": "#/definitions/connectionsRequestBinding",
          "example": "HTTP_POST"
        },
        "idp_sso_url": {
          "description": "IDP SSO URL",
          "type": "string",
          "example": "https://youridp.com/service/saml/sso"
        },
        "saml_signing_option": {
          "description": "SAML Signing Option",
          "$ref": "#/definitions/connectionsSAMLSigningOptions",
          "example": "SAML_ONLY_RESPONSE_SIGNING"
        },
        "sp_assertion_url": {
          "description": "SP Assertion URL",
          "type": "string",
          "example": "https://youridp.com/service/saml/assertion"
        },
        "sp_entity_id": {
          "description": "SP Entity ID",
          "type": "string",
          "example": "https://yourapp.com/service/saml"
        },
        "sp_metadata_url": {
          "description": "SP Metadata URL",
          "type": "string",
          "example": "https://youridp.com/service/saml/metadata"
        },
        "sp_slo_url": {
          "description": "Service Provider SLO url",
          "type": "string",
          "readOnly": true,
          "example": "https://yourapp.com/sso/v1/saml/conn_1234/slo/callback"
        },
        "ui_button_title": {
          "description": "UI Button Title",
          "type": "string",
          "example": "Login with SSO"
        },
        "want_request_signed": {
          "description": "Want Request Signed",
          "type": "boolean",
          "example": true
        }
      }
    },
    "connectionsSAMLSigningOptions": {
      "type": "string",
      "title": "enums all",
      "enum": [
        "NO_SIGNING",
        "SAML_ONLY_RESPONSE_SIGNING",
        "SAML_ONLY_ASSERTION_SIGNING",
        "SAML_RESPONSE_ASSERTION_SIGNING",
        "SAML_RESPONSE_OR_ASSERTION_SIGNING"
      ]
    },
    "connectionsToggleConnectionResponse": {
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Current state of the connection after the operation. True means the connection is now enabled and can be used for authentication.",
          "type": "boolean",
          "example": true
        },
        "error_message": {
          "description": "Error message if the operation fails",
          "type": "string",
          "example": "placeholder"
        }
      }
    },
    "connectionsTokenAuthType": {
      "type": "string",
      "enum": [
        "URL_PARAMS",
        "BASIC_AUTH"
      ]
    },
    "directoriesAttributeMapping": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "map_to": {
          "type": "string"
        }
      }
    },
    "directoriesAttributeMappings": {
      "type": "object",
      "properties": {
        "attributes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/directoriesAttributeMapping"
          }
        }
      }
    },
    "directoriesDirectory": {
      "type": "object",
      "properties": {
        "attribute_mappings": {
          "description": "Mappings between directory attributes and Scalekit user and group attributes",
          "$ref": "#/definitions/directoriesAttributeMappings"
        },
        "directory_endpoint": {
          "description": "The endpoint URL generated by Scalekit for synchronizing users and groups from the Directory Provider",
          "type": "string",
          "example": "https://yourapp.scalekit.com/api/v1/directoies/dir_123212312/scim/v2"
        },
        "directory_provider": {
          "description": "Identity provider connected to this directory",
          "$ref": "#/definitions/directoriesDirectoryProvider",
          "example": "OKTA"
        },
        "directory_type": {
          "description": "Type of the directory, indicating the protocol or standard used for synchronization",
          "$ref": "#/definitions/directoriesDirectoryType",
          "example": "SCIM"
        },
        "enabled": {
          "description": "Indicates whether the directory is currently enabled and actively synchronizing users and groups",
          "type": "boolean",
          "example": true
        },
        "id": {
          "description": "Unique identifier of the directory",
          "type": "string",
          "example": "dir_121312434123312"
        },
        "last_synced_at": {
          "description": "Timestamp of the last successful synchronization of users and groups from the Directory Provider",
          "type": "string",
          "format": "date-time",
          "example": "2024-10-01T00:00:00Z"
        },
        "name": {
          "description": "Name of the directory, typically representing the connected Directory provider",
          "type": "string",
          "example": "Azure AD"
        },
        "organization_id": {
          "description": "Unique identifier of the organization to which the directory belongs",
          "type": "string",
          "example": "org_121312434123312"
        },
        "role_assignments": {
          "description": "Role assignments associated with the directory, defining group based role assignments",
          "$ref": "#/definitions/directoriesRoleAssignments"
        },
        "secrets": {
          "description": "List of secrets used for authenticating and synchronizing with the Directory Provider",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/directoriesSecret"
          }
        },
        "stats": {
          "description": "Statistics and metrics related to the directory, such as synchronization status and error counts",
          "$ref": "#/definitions/directoriesStats"
        },
        "total_groups": {
          "description": "Total number of groups in the directory",
          "type": "integer",
          "format": "int32",
          "example": 10
        },
        "total_users": {
          "description": "Total number of users in the directory",
          "type": "integer",
          "format": "int32",
          "example": 10
        }
      }
    },
    "directoriesDirectoryGroup": {
      "type": "object",
      "properties": {
        "display_name": {
          "description": "Display Name",
          "type": "string",
          "example": "Admins"
        },
        "group_detail": {
          "description": "Complete Group Details Payload",
          "type": "object"
        },
        "id": {
          "description": "Group ID",
          "type": "string",
          "example": "dirgroup_121312434123312"
        },
        "total_users": {
          "description": "Total Users in the Group",
          "type": "integer",
          "format": "int32",
          "example": 10
        },
        "updated_at": {
          "description": "Updated At",
          "type": "string",
          "format": "date-time",
          "example": "2024-10-01T00:00:00Z"
        }
      }
    },
    "directoriesDirectoryProvider": {
      "type": "string",
      "enum": [
        "OKTA",
        "GOOGLE",
        "MICROSOFT_AD",
        "AUTH0",
        "ONELOGIN",
        "JUMPCLOUD",
        "PING_IDENTITY"
      ]
    },
    "directoriesDirectoryType": {
      "type": "string",
      "enum": [
        "SCIM",
        "LDAP"
      ]
    },
    "directoriesDirectoryUser": {
      "type": "object",
      "properties": {
        "email": {
          "description": "Email",
          "type": "string",
          "example": "johndoe"
        },
        "emails": {
          "description": "Emails",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "family_name": {
          "description": "Last Name",
          "type": "string",
          "example": "Doe"
        },
        "given_name": {
          "description": "First Name",
          "type": "string",
          "example": "John"
        },
        "groups": {
          "description": "Groups",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/directoriesDirectoryGroup"
          }
        },
        "id": {
          "description": "User ID",
          "type": "string",
          "example": "diruser_121312434123312"
        },
        "preferred_username": {
          "description": "Preferred Username",
          "type": "string",
          "example": "johndoe"
        },
        "updated_at": {
          "description": "Updated At",
          "type": "string",
          "format": "date-time",
          "example": "2024-10-01T00:00:00Z"
        },
        "user_detail": {
          "description": "Complete User Details Payload",
          "type": "object"
        }
      }
    },
    "directoriesGetDirectoryResponse": {
      "type": "object",
      "properties": {
        "directory": {
          "description": "Detailed information about the requested directory",
          "$ref": "#/definitions/directoriesDirectory"
        }
      }
    },
    "directoriesListDirectoriesResponse": {
      "type": "object",
      "properties": {
        "directories": {
          "description": "List of directories associated with the organization",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/directoriesDirectory"
          }
        }
      }
    },
    "directoriesListDirectoryGroupsResponse": {
      "type": "object",
      "properties": {
        "groups": {
          "description": "List of directory groups retrieved from the specified directory",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/directoriesDirectoryGroup"
          }
        },
        "next_page_token": {
          "description": "Token to retrieve the next page of results. Use this token in the 'page_token' field of the next request",
          "type": "string"
        },
        "prev_page_token": {
          "description": "Token to retrieve the previous page of results. Use this token in the 'page_token' field of the next request",
          "type": "string"
        },
        "total_size": {
          "description": "Total number of groups matching the request criteria, regardless of pagination",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "directoriesListDirectoryUsersResponse": {
      "type": "object",
      "properties": {
        "next_page_token": {
          "description": "Token for pagination. Use this token in the 'page_token' field of the next request to fetch the subsequent page of users",
          "type": "string"
        },
        "prev_page_token": {
          "description": "Token for pagination. Use this token in the 'page_token' field of the next request to fetch the prior page of users",
          "type": "string"
        },
        "total_size": {
          "description": "Total number of users available in the directory that match the request criteria",
          "type": "integer",
          "format": "int64"
        },
        "users": {
          "description": "List of directory users retrieved from the specified directory",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/directoriesDirectoryUser"
          }
        }
      }
    },
    "directoriesRoleAssignment": {
      "type": "object",
      "properties": {
        "group_id": {
          "description": "group ID for the role mapping",
          "type": "string",
          "example": "dirgroup_121312434123"
        },
        "role_id": {
          "description": "role ID for the role mapping",
          "type": "string",
          "example": "role_12131243412331"
        }
      }
    },
    "directoriesRoleAssignments": {
      "type": "object",
      "properties": {
        "assignments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/directoriesRoleAssignment"
          }
        }
      }
    },
    "directoriesSecret": {
      "type": "object",
      "properties": {
        "create_time": {
          "description": "Creation Time",
          "type": "string",
          "format": "date-time",
          "example": "2024-10-01T00:00:00Z"
        },
        "directory_id": {
          "description": "Directory ID",
          "type": "string",
          "example": "dir_12362474900684814"
        },
        "expire_time": {
          "description": "Expiry Time",
          "type": "string",
          "format": "date-time",
          "example": "2025-10-01T00:00:00Z"
        },
        "id": {
          "type": "string"
        },
        "last_used_time": {
          "description": "Last Used Time",
          "type": "string",
          "format": "date-time",
          "example": "2024-10-01T00:00:00Z"
        },
        "secret_suffix": {
          "description": "Secret Suffix",
          "type": "string",
          "example": "Nzg5"
        },
        "status": {
          "description": "Secret Status",
          "$ref": "#/definitions/directoriesSecretStatus",
          "example": "ACTIVE"
        }
      }
    },
    "directoriesSecretStatus": {
      "type": "string",
      "enum": [
        "INACTIVE"
      ]
    },
    "directoriesStats": {
      "type": "object",
      "properties": {
        "group_updated_at": {
          "description": "Max time of Group Updated At for Directory",
          "type": "string",
          "format": "date-time",
          "example": "2024-10-01T00:00:00Z"
        },
        "total_groups": {
          "description": "Total Groups in the Directory",
          "type": "integer",
          "format": "int32",
          "example": 10
        },
        "total_users": {
          "description": "Total Users in the Directory",
          "type": "integer",
          "format": "int32",
          "example": 10
        },
        "user_updated_at": {
          "description": "Max time of User Updated At for Directory",
          "type": "string",
          "format": "date-time",
          "example": "2024-10-01T00:00:00Z"
        }
      }
    },
    "directoriesToggleDirectoryResponse": {
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Specifies the directory's state after the toggle operation. A value of `true` indicates that the directory is enabled and actively synchronizing users and groups. A value of `false` means the directory is disabled, halting synchronization",
          "type": "boolean",
          "example": true
        },
        "error_message": {
          "description": "Contains a human-readable error message if the toggle operation encountered an issue. If the operation was successful, this field will be empty",
          "type": "string",
          "example": "The directory is already enabled"
        }
      }
    },
    "organizationsCreateOrganizationResponse": {
      "type": "object",
      "properties": {
        "organization": {
          "description": "The newly created organization containing its ID, settings, and metadata",
          "$ref": "#/definitions/organizationsOrganization"
        }
      }
    },
    "organizationsFeature": {
      "description": "- dir_sync: dir_sync enables directory synchronization configuration in the portal\n - sso: sso enables Single Sign-On (SSO) configuration in the portal",
      "type": "string",
      "title": "Feature represents the available features that can be enabled for an organization's portal link",
      "enum": [
        "dir_sync",
        "sso"
      ]
    },
    "organizationsGeneratePortalLinkResponse": {
      "type": "object",
      "properties": {
        "link": {
          "description": "Contains the generated admin portal link details. The link URL can be shared with organization administrators to set up: Single Sign-On (SSO) authentication and directory synchronization",
          "$ref": "#/definitions/organizationsLink"
        }
      }
    },
    "organizationsGetOrganizationResponse": {
      "type": "object",
      "properties": {
        "organization": {
          "description": "The newly created organization",
          "$ref": "#/definitions/organizationsOrganization"
        }
      }
    },
    "organizationsLink": {
      "type": "object",
      "properties": {
        "expire_time": {
          "description": "Expiry time of the link. The link is valid for 1 week.",
          "type": "string",
          "format": "date-time",
          "example": "2024-02-06T14:48:00.000Z"
        },
        "id": {
          "description": "Unique Identifier for the link",
          "type": "string",
          "example": "lnk_123123123123123"
        },
        "location": {
          "description": "Location of the link. This is the URL that can be used to access the Admin portal. The link is valid for 1 week.",
          "type": "string",
          "example": "https://scalekit.com/portal/lnk_123123123123123"
        }
      }
    },
    "organizationsListOrganizationsResponse": {
      "type": "object",
      "properties": {
        "next_page_token": {
          "description": "Pagination token for the next page of results. Use this token to fetch the next page.",
          "type": "string",
          "example": "\u003cnext_page_token\u003e"
        },
        "organizations": {
          "description": "List of organization objects",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/organizationsOrganization"
          }
        },
        "prev_page_token": {
          "description": "Pagination token for the previous page of results. Use this token to fetch the previous page.",
          "type": "string",
          "example": "\u003cprev_page_token\u003e"
        },
        "total_size": {
          "description": "Total number of organizations in the environment.",
          "type": "integer",
          "format": "int64",
          "example": 30
        }
      }
    },
    "organizationsOrganization": {
      "type": "object",
      "required": [
        "create_time"
      ],
      "properties": {
        "create_time": {
          "description": "Timestamp when the organization was created",
          "type": "string",
          "format": "date-time",
          "title": "Created Time",
          "example": "2025-02-15T06:23:44.560Z"
        },
        "display_name": {
          "description": "Name of the organization. Must be between 1 and 200 characters",
          "type": "string",
          "title": "Name of the org to be used in display",
          "example": "Megasoft"
        },
        "external_id": {
          "description": "Your application's unique identifier for this organization, used to link Scalekit with your system.",
          "type": "string",
          "title": "External Id is useful to store a unique identifier for a given Org that. The unique Identifier can be the id of your tenant / org in your SaaSApp",
          "example": "my_unique_id"
        },
        "id": {
          "description": "Unique scalekit-generated identifier that uniquely references an organization",
          "type": "string",
          "title": "Id",
          "example": "org_59615193906282635"
        },
        "metadata": {
          "description": "Key value pairs extension attributes.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "region_code": {
          "description": "Geographic region code for the organization. Currently limited to US.",
          "title": "Optional regioncode",
          "$ref": "#/definitions/commonsRegionCode",
          "example": "US"
        },
        "settings": {
          "title": "Organization Settings",
          "$ref": "#/definitions/organizationsOrganizationSettings"
        },
        "update_time": {
          "description": "Timestamp when the organization was last updated",
          "type": "string",
          "format": "date-time",
          "title": "Updated time",
          "example": "2025-02-15T06:23:44.560Z"
        }
      }
    },
    "organizationsOrganizationSettings": {
      "description": "Configuration options that control organization-level features and capabilities",
      "type": "object",
      "title": "Organization Settings",
      "properties": {
        "features": {
          "description": "List of feature toggles that control organization capabilities such as SSO authentication and directory synchronization",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/organizationsOrganizationSettingsFeature"
          },
          "example": [
            {
              "enabled": true,
              "name": "sso"
            },
            {
              "enabled": false,
              "name": "directory_sync"
            }
          ]
        }
      },
      "example": {
        "features": [
          {
            "enabled": true,
            "name": "sso"
          },
          {
            "enabled": false,
            "name": "directory_sync"
          }
        ]
      }
    },
    "organizationsOrganizationSettingsFeature": {
      "description": "Controls the activation state of a specific organization feature",
      "type": "object",
      "title": "Organization Feature Toggle",
      "required": [
        "name",
        "enabled"
      ],
      "properties": {
        "enabled": {
          "description": "Whether the feature is enabled (true) or disabled (false) for this organization",
          "type": "boolean",
          "example": true
        },
        "name": {
          "description": "Feature identifier. Supported values include: \"sso\" (Single Sign-On), \"directory_sync\" (Directory Synchronization)",
          "type": "string",
          "example": "sso"
        }
      }
    },
    "organizationsSearchOrganizationsResponse": {
      "type": "object",
      "properties": {
        "next_page_token": {
          "type": "string"
        },
        "organizations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/organizationsOrganization"
          }
        },
        "prev_page_token": {
          "type": "string"
        },
        "total_size": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "organizationsUpdateOrganizationResponse": {
      "type": "object",
      "properties": {
        "organization": {
          "description": "Updated organization details",
          "$ref": "#/definitions/organizationsOrganization"
        }
      }
    },
    "protobufNullValue": {
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\nThe JSON representation for `NullValue` is JSON `null`.",
      "type": "string"
    },
    "usersAddUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/usersUser"
        }
      }
    },
    "usersCreateUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/usersUser"
        }
      }
    },
    "usersGetUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/usersUser"
        }
      }
    },
    "usersListUserResponse": {
      "type": "object",
      "properties": {
        "next_page_token": {
          "description": "Opaque token for retrieving the next page of results. Empty if there are no more pages.",
          "type": "string",
          "example": "eyJwYWdlIjogMiwgImxhc3RfaWQiOiAidXNyXzEyMzQ1In0="
        },
        "prev_page_token": {
          "description": "Opaque token for retrieving the previous page of results. Empty for the first page.",
          "type": "string",
          "example": "eyJwYWdlIjogMCwgImZpcnN0X2lkIjogInVzcl85ODc2NSJ9"
        },
        "total_size": {
          "description": "Total number of users matching the request criteria, regardless of pagination.",
          "type": "integer",
          "format": "int64",
          "example": 1042
        },
        "users": {
          "description": "List of user objects for the current page. May contain fewer entries than requested page_size.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/usersUser"
          }
        }
      }
    },
    "usersUpdateUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/usersUser"
        }
      }
    },
    "usersUser": {
      "type": "object",
      "properties": {
        "create_time": {
          "description": "Timestamp when the user account was initially created. Automatically set by the server.",
          "type": "string",
          "format": "date-time"
        },
        "email": {
          "description": "Primary email address for the user. Must be unique across the environment and valid per RFC 5322.",
          "type": "string",
          "example": "user@example.com"
        },
        "external_id": {
          "description": "Your application's unique identifier for this organization, used to link Scalekit with your system.",
          "type": "string",
          "example": "ext_12345a67b89c"
        },
        "id": {
          "description": "Unique system-generated identifier for the user. Immutable once created.",
          "type": "string",
          "example": "usr_1234abcd5678efgh"
        },
        "identity": {
          "description": "Unique identifier from the identity provider (IDP). Immutable once set.",
          "type": "string",
          "example": "auth0|1234567890abcdef"
        },
        "last_login": {
          "description": "Timestamp of the user's most recent successful authentication. Updated automatically.",
          "type": "string",
          "format": "date-time"
        },
        "metadata": {
          "description": "Custom key-value pairs for storing additional user context. Keys (3-25 chars), values (1-256 chars).",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "example": {
            "department": "engineering",
            "location": "nyc-office"
          }
        },
        "organizations": {
          "description": "List of organization memberships. Automatically populated based on group assignments.",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/commonsOrganizationMembership"
          },
          "readOnly": true
        },
        "phone_number": {
          "description": "Phone number in E.164 international format. Required for SMS-based authentication.",
          "type": "string",
          "example": "+14155552671"
        },
        "update_time": {
          "description": "Timestamp of the last modification to the user account. Automatically updated by the server.",
          "type": "string",
          "format": "date-time"
        },
        "user_profile": {
          "description": "User's personal information including name, address, and other profile attributes.",
          "$ref": "#/definitions/commonsUserProfile"
        }
      }
    },
    "v1clientsUpdateClient": {
      "type": "object",
      "properties": {
        "back_channel_logout_uri": {
          "type": "string"
        },
        "default_redirect_uri": {
          "type": "string"
        },
        "initiate_login_uri": {
          "type": "string"
        },
        "post_logout_redirect_uris": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "redirect_uris": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1organizationsCreateOrganization": {
      "type": "object",
      "properties": {
        "display_name": {
          "description": "Name of the organization. Must be between 1 and 200 characters.",
          "type": "string",
          "example": "Megasoft Inc"
        },
        "external_id": {
          "description": "Your application's unique identifier for this organization, used to link Scalekit with your system.",
          "type": "string",
          "example": "my_unique_id"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v1organizationsUpdateOrganization": {
      "description": "For update messages ensure the indexes are same as the base model itself.",
      "type": "object",
      "properties": {
        "display_name": {
          "description": "Name of the organization to display in the UI. Must be between 1 and 200 characters",
          "type": "string",
          "example": "Acme Corporation"
        },
        "external_id": {
          "description": "Your application's unique identifier for this organization, used to link Scalekit with your system",
          "type": "string",
          "example": "tenant_12345"
        },
        "metadata": {
          "description": "Custom key-value pairs to store with the organization. Keys must be 3-25 characters, values must be 1-256 characters. Maximum 10 pairs allowed.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "example": {
            "industry": "technology"
          }
        }
      }
    },
    "v1usersUpdateUser": {
      "type": "object",
      "properties": {
        "external_id": {
          "description": "Your application's unique identifier for this organization, used to link Scalekit with your system.",
          "type": "string",
          "example": "ext_7890xyz"
        },
        "metadata": {
          "description": "System metadata updates. Replaces existing entries unless included. Max 10 pairs. Keys (3-25 chars), values (1-256 chars).",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "example": {
            "account_tier": "premium",
            "support_contact": "team-alpha"
          }
        },
        "user_profile": {
          "description": "Updated profile information including name, locale, and address details. Partial updates are supported.",
          "$ref": "#/definitions/commonsUserProfile",
          "example": {
            "first_name": "Michael",
            "last_name": "Chen",
            "locale": "fr-CA"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "BasicAuth": {
      "type": "basic"
    },
    "OAuth2": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "http://$ENV_URL/oauth/authorize",
      "tokenUrl": "http://$ENV_URL/oauth/token",
      "scopes": {
        "offline_access": "Grants a refresh token with absolute expiry"
      }
    }
  },
  "tags": [
    {
      "description": "Organization represents a customer or a tenant of your product. This is the top level entity and all resources are mapped to this Organization object. Each organization is uniquely identified by `organization_id`.\n\n\u003c!-- ## Organization Attributes\n\n| Attribute Name             | Attribute Description                                                                                                                        |\n| -------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------- |\n| `id`\u003cbr\u003e_string_           | Unique ID of an Organization. Required for all API operations against this organization.                                                     |\n| `display_name`\u003cbr\u003e_string_ | Name of the Organization                                                                                                                     |\n| `create_time`\u003cbr\u003e_string_  | Creation timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.\u003cbr\u003eExample: `2011-10-05T14:48:00.000Z`                      |\n| `update_time`\u003cbr\u003e_string_  | Last update timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.\u003cbr\u003eExample: `2021-10-05T14:48:00.000Z`                   |\n| `external_id`\u003cbr\u003e_string_  | Your system's unique ID for this organization. You can use this to fetch Organization and Connection details without storing Scalekit's IDs. |\n| `metadata`\u003cbr\u003e_object_     | Additional organization information stored as JSON.\u003cbr\u003eExample: `{\"key\":\"value\"}`                                                            |\n| `region_code`\u003cbr\u003e_string_  | Data center region where organization data is stored. Currently always returns `US`.                                                         | --\u003e\n",
      "name": "Organizations"
    },
    {
      "description": "The Directory API lets you connect external identity providers to your organizations. Use these endpoints to view users and groups, enable or disable directory connections, and configure access settings. Supports identity systems like Okta, Microsoft Entra ID, and Google Workspace through standard protocols.",
      "name": "Directory"
    },
    {
      "description": " Connection represents a unique Single Sign-on instance for an Organization. Connection has the configuration needed to establish an SSO and exchange user information securely between Scalekit and your customer's Identity Provider. Depending on the connection type parameter, the corresponding configuration details are found in `oidc_config` or `saml_config` parameter.\n\u003c!--\n**Connection Attributes**\n\n| Attribute Name | Attribute Description |\n|---|---|\n| `id`\u003cbr\u003e_string_ | Unique ID of an SSO Connection. This attribute is required for all API operations to be performed against this connection.  |\n| `provider`\u003cbr\u003e_ENUM_ | Name of the Identity Provider. Possible Values are: `OKTA`, `GOOGLE`, `MICROSOFT_AD`, `AUTH0`, `ONELOGIN`, `PING_IDENTITY`, `JUMPCLOUD`, `CUSTOM` |\n| `type`\u003cbr\u003e_ENUM_ | Protocol type that is used for this connection. Possible values are `SAML` or `OIDC` |\n| `status`\u003cbr\u003e_ENUM_ | Indicates the configuration progress status of the SSO Connection. Possible Values are `DRAFT`, `INPROGRESS`, `COMPLETED`. \u003cbr\u003e_Note_: This doesn't indicate whether this connection is active or not. |\n| `enabled`\u003cbr\u003e_boolean_ | Indicates whether this connection is active or not. Users can only login via active SSO connections. |\n| `organization_id`\u003cbr\u003e_string_ | Organization ID to which this SSO connection belongs to. |\n| `saml_config`\u003cbr\u003e_Object_ | If this connection is of type `SAML`, the configuration details are found in this object. |\n| `oidc_config`\u003cbr\u003e_Object_ | If this connection is of type `OIDC`, the configuration details are found in this object. |\n| `attribute_mapping`\u003cbr\u003e_Object_ | Array of attribute mappings using which the user information received from the Identity Provider is normalized. Example: \u003ccode\u003e \u003cbr/\u003e{ \u003cbr/\u003e\u0026nbsp;\u0026nbsp; \"email\": \"email\",\u003cbr/\u003e\u0026nbsp;\u0026nbsp; \"family_name\": \"lastName\", \u003cbr/\u003e\u0026nbsp;\u0026nbsp; \"given_name\": \"firstName\",\u003cbr/\u003e\u0026nbsp;\u0026nbsp;\u0026nbsp;\"sub\": \"nameid\" \u003cbr/\u003e} \u003c/code\u003e |\n| `create_time` | Timestamp at which this connection record was created in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format. For Example: `2021-10-05T14:48:00.000Z` |\n| `update_time`\u003cbr\u003e_string_ | Timestamp at which this connection record was last updated in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format. For Example: `2021-10-10T14:48:00.000Z` | --\u003e\n",
      "name": "Connection"
    },
    {
      "name": "ConnectionService"
    },
    {
      "name": "DirectoryService"
    },
    {
      "name": "UserService"
    },
    {
      "name": "RolesService"
    },
    {
      "name": "ClientService"
    }
  ],
  "externalDocs": {
    "description": "Scalekit Docs",
    "url": "https://docs.scalekit.com/"
  }
}